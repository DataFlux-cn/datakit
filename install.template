#!/bin/bash
# auth: tanb
# date: Wed Feb 20 17:57:44 CST 2019

# 下载地址
dl_url="http://{{.DownloadAddr}}/{{.Name}}-{{.Version}}.tar.gz"

upgrade_flag=0
within_docker=0

bin_name=ftcollector
service_name=${bin_name}
install_dir=/usr/local/cloudcare/forethought/${service_name}
binary="${install_dir}/${bin_name}"
install_log="${install_dir}"/install.log

# 创建安装目录
if ! mkdir -p "${install_dir}"; then
  exit -1
fi


# 获取命令行参数
while [[ $# > 1 ]]
do
	opt="$1"

	case $opt in
		--upgrade)
			upgrade_flag="$2"
			shift
			;;

		*)
			# unknown option
			;;
	esac
	shift
done


# 安装预检
printf "===================================\n" | tee -a $install_log
echo "Date: `date`" | tee -a $install_log
printf "===================================\n" | tee -a $install_log

printf "current newest version: %s\n" "{{.Version}}" | tee -a $install_log


########################################################
# 检查这些命令是否支持
########################################################
commands=(
wget
tar
)

for c in "${commands[@]}"; do
  if ! hash $c; then
    printf "`$c` not found, exit.\n" $c | tee -a $install_log
    exit -1
  fi
done

########################################################
# 停止当前正在运行的服务
########################################################

services=(
${service_name}
)

# 停止相关服务
for s in "${services[@]}"; do
  printf "stopping ${s} ...\n" | tee -a $install_log
  
  service "$s" stop >/dev/null 2>&1
  systemctl stop "$s" >/dev/null 2>&1
  initctl stop "$s" >/dev/null 2>&1

  if ps -ef | pgrep "$s"; then
    printf "stop ${s} failed\n" | tee -a "$install_log"
    exit -1
  fi
done

########################################################
# 下载最新 binlog 并安装到指定目录
########################################################

printf 'downloading new version... ' | tee -a ${install_log}
wget -O - "${dl_url}" | tar -xz -C ${install_dir}
if [ $? -ne 0 ]; then
  printf 'failed\n' | tee -a ${install_log}
  exit 1
else
  printf 'ok\n' | tee -a ${install_log}
fi

# 根据系统平台选择不同的 agent 程序
arch=`uname -m` 
if [ "${arch}" = "x86_64" ]; then
  echo 'install on platform x86_64...' | tee -a $install_log
  mv "${install_dir}"/ftcollector-linux-amd64/${bin_name} "${install_dir}"/
else
  echo 'i386 not support, exit now!' | tee -a $install_log
  exit -1
fi


########################################################
# install all services
########################################################

# init
if [ $upgrade_flag -eq 0 ]; then
  printf "init ${service_name} ...\n" | tee -a ${install_log}
  if ${binary} --init ; then

    printf "ok\n" | tee -a ${install_log}
  else
    printf "init failed(see %s for details)\n" "${log}" | tee -a ${install_log}
		echo "${binary}" --init | tee -a ${install_log}
    exit 1
  fi
else
	printf "new ${service_name} download ok\n" | tee -a ${install_log}
fi

#printf "starting ${service_name} ...\n" | tee -a ${install_log}


# TODO 这里的开机启动需要整理下

########################################################
# start profwang_probe and set to backend
# 经测试(Sat Nov 11 11:04:22 CST 2017):
#   centos 6.8 是 old upstart 启动的
#   centos 6.9 是 old upstart 启动的
#    通过 status profwang_probe 查看 profwang_probe 运行状态
#   centos 7.2 是 systemd 启动的
#   centos 7.3 是 systemd 启动的
#    通过 systemctl status profwang_probe 查看运行状况
#   ubuntu 14.04/16.04 是 new upstart 启动
#   debian 8.9 是通过 systemd 启动的
#   opensuse 13.1 是通过 systemd 启动的
########################################################
if hash systemctl 2>/dev/null; then

	printf "${service_name} init by systemctl...\n" | tee -a ${install_log}
	systemctl stop "${service_name}" > /dev/null 2>&1
	systemctl disable "${service_name}" > /dev/null 2>&1
	systemd_path="/lib/systemd"
	if [ ! -e "${systemd_path}" ];then
    	systemd_path="/etc/systemd"
	fi 

  	if cp "${install_dir}/autostart/auto.service" "${systemd_path}/system/${service_name}.service"; then
    	systemctl enable "${service_name}".service
    	systemctl start "${service_name}".service
  	else
    	printf "failed.\n" | tee -a "${install_log}"
    	exit -1
  	fi
else
	if hash init-checkconf 2>/dev/null; then
		printf "${service_name} init by new upstart...\n" | tee -a "${install_log}"
		service "${service_name}" stop > /dev/null 2>&1

    	if cp "${install_dir}/autostart/auto.conf" "/etc/init/${service_name}.conf" ; then
      		service "${service_name}" start
    	else
      		printf "failed.\n" | tee -a "${install_log}"
      		exit -1
    	fi

	else if hash initctl 2>/dev/null; then

		printf "${service_name} init by old upstart...\n" | tee -a "${install_log}"

    	service "${service_name}" stop > /dev/null 2>&1
    	stop "${service_name}" > /dev/null 2>&1

    	if cp "${install_dir}/autostart/auto.conf" "/etc/init/${service_name}.conf" ; then
			start "${service_name}"
    	else
        	printf "failed.\n" | tee -a "${install_log}"
        	exit -1
      	fi

    else
		printf "${service_name} init by init.d...\n" | tee -a "${install_log}"
		service "${service_name}" stop > /dev/null 2>&1

    	if cp "${install_dir}/autostart/auto.sh" "/etc/init.d/${service_name}" ; then
        	chmod +x "/etc/init.d/${service_name}"

        	if hash update-rc.d 2>/dev/null; then
          		update-rc.d "${service_name}" defaults > /dev/null 2>&1
        	else
          		chkconfig --add "${service_name}" > /dev/null 2>&1
        	fi

        	service "${service_name}" start
		else
        	printf "failed.\n" | tee -a "${install_log}"
        	exit -1
    	fi
    fi
  fi
fi

printf "Success!\n" | tee -a ${install_log}

