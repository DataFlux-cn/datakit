//此文件由自动生成，请不要手动修改
//此文件由自动生成，请不要手动修改
//此文件由自动生成，请不要手动修改

package patterns

var GlobalPatterns = map[string][][2]string {
    "aws" : {
		{"_s3_request_line", `(?:%{_word:verb} %{_notspace:request}(?: HTTP/%{_number:httpversion})?|%{_data:rawrequest})`},
		{"_s3_access_log", `%{_word:owner} %{_notspace:bucket} \[%{_httpdate:timestamp}\] %{_ip:clientip} %{_notspace:requester} %{_notspace:request_id} %{_notspace:operation} %{_notspace:key} (?:"%{_s3_request_line}"|-) (?:%{_int:response:int}|-) (?:-|%{_notspace:error_code}) (?:%{_int:bytes:int}|-) (?:%{_int:object_size:int}|-) (?:%{_int:request_time_ms:int}|-) (?:%{_int:turnaround_time_ms:int}|-) (?:%{_qs:referrer}|-) (?:"?%{_qs:agent}"?|-) (?:-|%{_notspace:version_id})`},
		{"_elb_uripathparam", `%{_uripath:path}(?:%{_uriparam:params})?`},
		{"_elb_uri", `%{_uriproto:proto}://(?:%{_user}(?::[^@]*)?@)?(?:%{_urihost:urihost})?(?:%{_elb_uripathparam})?`},
		{"_elb_request_line", `(?:%{_word:verb} %{_elb_uri:request}(?: HTTP/%{_number:httpversion})?|%{_data:rawrequest})`},
		{"_elb_access_log", `%{_timestamp_iso8601:timestamp} %{_notspace:elb} %{_ip:clientip}:%{_int:clientport:int} (?:(%{_ip:backendip}:?:%{_int:backendport:int})|-) %{_number:request_processing_time:float} %{_number:backend_processing_time:float} %{_number:response_processing_time:float} %{_int:response:int} %{_int:backend_response:int} %{_int:received_bytes:int} %{_int:bytes:int} "%{_elb_request_line}"`},
    },

    "bacula" : {
		{"_bacula_timestamp", `%{_monthday}-%{_month} %{_hour}:%{_minute}`},
		{"_bacula_host", `[a-zA-Z0-9-]+`},
		{"_bacula_volume", `%{_user}`},
		{"_bacula_device", `%{_user}`},
		{"_bacula_devicepath", `%{_unixpath}`},
		{"_bacula_capacity", `%{_int}{1,3}(,%{_int}{3})*`},
		{"_bacula_version", `%{_user}`},
		{"_bacula_job", `%{_user}`},
		{"_bacula_log_max_capacity", `User defined maximum volume capacity %{_bacula_capacity} exceeded on device \"%{_bacula_device:device}\" \(%{_bacula_devicepath}\)`},
		{"_bacula_log_end_volume", `End of medium on Volume \"%{_bacula_volume:volume}\" Bytes=%{_bacula_capacity} Blocks=%{_bacula_capacity} at %{_monthday}-%{_month}-%{_year} %{_hour}:%{_minute}.`},
		{"_bacula_log_new_volume", `Created new Volume \"%{_bacula_volume:volume}\" in catalog.`},
		{"_bacula_log_new_label", `Labeled new Volume \"%{_bacula_volume:volume}\" on device \"%{_bacula_device:device}\" \(%{_bacula_devicepath}\).`},
		{"_bacula_log_wrote_label", `Wrote label to prelabeled Volume \"%{_bacula_volume:volume}\" on device \"%{_bacula_device}\" \(%{_bacula_devicepath}\)`},
		{"_bacula_log_new_mount", `New volume \"%{_bacula_volume:volume}\" mounted on device \"%{_bacula_device:device}\" \(%{_bacula_devicepath}\) at %{_monthday}-%{_month}-%{_year} %{_hour}:%{_minute}.`},
		{"_bacula_log_noopen", `\s+Cannot open %{_data}: ERR=%{_greedydata:berror}`},
		{"_bacula_log_noopendir", `\s+Could not open directory %{_data}: ERR=%{_greedydata:berror}`},
		{"_bacula_log_nostat", `\s+Could not stat %{_data}: ERR=%{_greedydata:berror}`},
		{"_bacula_log_nojobs", `There are no more Jobs associated with Volume \"%{_bacula_volume:volume}\". Marking it purged.`},
		{"_bacula_log_all_records_pruned", `All records pruned from Volume \"%{_bacula_volume:volume}\"; marking it \"Purged\"`},
		{"_bacula_log_begin_prune_jobs", `Begin pruning Jobs older than %{_int} month %{_int} days .`},
		{"_bacula_log_begin_prune_files", `Begin pruning Files.`},
		{"_bacula_log_pruned_jobs", `Pruned %{_int} Jobs* for client %{_bacula_host:client} from catalog.`},
		{"_bacula_log_pruned_files", `Pruned Files from %{_int} Jobs* for client %{_bacula_host:client} from catalog.`},
		{"_bacula_log_endprune", `End auto prune.`},
		{"_bacula_log_startjob", `Start Backup JobId %{_int}, Job=%{_bacula_job:job}`},
		{"_bacula_log_startrestore", `Start Restore Job %{_bacula_job:job}`},
		{"_bacula_log_usedevice", `Using Device \"%{_bacula_device:device}\"`},
		{"_bacula_log_diff_fs", `\s+%{_unixpath} is a different filesystem. Will not descend from %{_unixpath} into it.`},
		{"_bacula_log_jobend", `Job write elapsed time = %{_data:elapsed}, Transfer rate = %{_number} (K|M|G)? Bytes/second`},
		{"_bacula_log_noprune_jobs", `No Jobs found to prune.`},
		{"_bacula_log_noprune_files", `No Files found to prune.`},
		{"_bacula_log_volume_prevwritten", `Volume \"%{_bacula_volume:volume}\" previously written, moving to end of data.`},
		{"_bacula_log_readyappend", `Ready to append to end of Volume \"%{_bacula_volume:volume}\" size=%{_int}`},
		{"_bacula_log_cancelling", `Cancelling duplicate JobId=%{_int}.`},
		{"_bacula_log_markcancel", `JobId %{_int}, Job %{_bacula_job:job} marked to be canceled.`},
		{"_bacula_log_client_rbj", `shell command: run ClientRunBeforeJob \"%{_greedydata:runjob}\"`},
		{"_bacula_log_vss", `(Generate )?VSS (Writer)?`},
		{"_bacula_log_maxstart", `Fatal error: Job canceled because max start delay time exceeded.`},
		{"_bacula_log_duplicate", `Fatal error: JobId %{_int:duplicate} already running. Duplicate job not allowed.`},
		{"_bacula_log_nojobstat", `Fatal error: No Job status returned from FD.`},
		{"_bacula_log_fatal_conn", `Fatal error: bsock.c:133 Unable to connect to (Client: %{_bacula_host:client}|Storage daemon) on %{_hostname}:%{_posint}. ERR=(?<berror>%{_greedydata})`},
		{"_bacula_log_no_connect", `Warning: bsock.c:127 Could not connect to (Client: %{_bacula_host:client}|Storage daemon) on %{_hostname}:%{_posint}. ERR=(?<berror>%{_greedydata})`},
		{"_bacula_log_no_auth", `Fatal error: Unable to authenticate with File daemon at %{_hostname}. Possible causes:`},
		{"_bacula_log_nosuit", `No prior or suitable Full backup found in catalog. Doing FULL backup.`},
		{"_bacula_log_noprior", `No prior Full backup Job record found.`},
		{"_bacula_log_job", `(Error: )?Bacula %{_bacula_host} %{_bacula_version} \(%{_bacula_version}\):`},
		{"_bacula_logline", `%{_bacula_timestamp:bts} %{_bacula_host:hostname} JobId %{_int:jobid}: (%{_bacula_log_max_capacity}|%{_bacula_log_end_volume}|%{_bacula_log_new_volume}|%{_bacula_log_new_label}|%{_bacula_log_wrote_label}|%{_bacula_log_new_mount}|%{_bacula_log_noopen}|%{_bacula_log_noopendir}|%{_bacula_log_nostat}|%{_bacula_log_nojobs}|%{_bacula_log_all_records_pruned}|%{_bacula_log_begin_prune_jobs}|%{_bacula_log_begin_prune_files}|%{_bacula_log_pruned_jobs}|%{_bacula_log_pruned_files}|%{_bacula_log_endprune}|%{_bacula_log_startjob}|%{_bacula_log_startrestore}|%{_bacula_log_usedevice}|%{_bacula_log_diff_fs}|%{_bacula_log_jobend}|%{_bacula_log_noprune_jobs}|%{_bacula_log_noprune_files}|%{_bacula_log_volume_prevwritten}|%{_bacula_log_readyappend}|%{_bacula_log_cancelling}|%{_bacula_log_markcancel}|%{_bacula_log_client_rbj}|%{_bacula_log_vss}|%{_bacula_log_maxstart}|%{_bacula_log_duplicate}|%{_bacula_log_nojobstat}|%{_bacula_log_fatal_conn}|%{_bacula_log_no_connect}|%{_bacula_log_no_auth}|%{_bacula_log_nosuit}|%{_bacula_log_job}|%{_bacula_log_noprior})`},
    },

    "bro" : {
		{"_bro_http", `%{_number:ts}\t%{_notspace:uid}\t%{_ip:orig_h}\t%{_int:orig_p}\t%{_ip:resp_h}\t%{_int:resp_p}\t%{_int:trans_depth}\t%{_greedydata:method}\t%{_greedydata:domain}\t%{_greedydata:uri}\t%{_greedydata:referrer}\t%{_greedydata:user_agent}\t%{_number:request_body_len}\t%{_number:response_body_len}\t%{_greedydata:status_code}\t%{_greedydata:status_msg}\t%{_greedydata:info_code}\t%{_greedydata:info_msg}\t%{_greedydata:filename}\t%{_greedydata:bro_tags}\t%{_greedydata:username}\t%{_greedydata:password}\t%{_greedydata:proxied}\t%{_greedydata:orig_fuids}\t%{_greedydata:orig_mime_types}\t%{_greedydata:resp_fuids}\t%{_greedydata:resp_mime_types}`},
		{"_bro_dns", `%{_number:ts}\t%{_notspace:uid}\t%{_ip:orig_h}\t%{_int:orig_p}\t%{_ip:resp_h}\t%{_int:resp_p}\t%{_word:proto}\t%{_int:trans_id}\t%{_greedydata:query}\t%{_greedydata:qclass}\t%{_greedydata:qclass_name}\t%{_greedydata:qtype}\t%{_greedydata:qtype_name}\t%{_greedydata:rcode}\t%{_greedydata:rcode_name}\t%{_greedydata:AA}\t%{_greedydata:TC}\t%{_greedydata:RD}\t%{_greedydata:RA}\t%{_greedydata:Z}\t%{_greedydata:answers}\t%{_greedydata:TTLs}\t%{_greedydata:rejected}`},
		{"_bro_conn", `%{_number:ts}\t%{_notspace:uid}\t%{_ip:orig_h}\t%{_int:orig_p}\t%{_ip:resp_h}\t%{_int:resp_p}\t%{_word:proto}\t%{_greedydata:service}\t%{_number:duration}\t%{_number:orig_bytes}\t%{_number:resp_bytes}\t%{_greedydata:conn_state}\t%{_greedydata:local_orig}\t%{_greedydata:missed_bytes}\t%{_greedydata:history}\t%{_greedydata:orig_pkts}\t%{_greedydata:orig_ip_bytes}\t%{_greedydata:resp_pkts}\t%{_greedydata:resp_ip_bytes}\t%{_greedydata:tunnel_parents}`},
		{"_bro_files", `%{_number:ts}\t%{_notspace:fuid}\t%{_ip:tx_hosts}\t%{_ip:rx_hosts}\t%{_notspace:conn_uids}\t%{_greedydata:source}\t%{_greedydata:depth}\t%{_greedydata:analyzers}\t%{_greedydata:mime_type}\t%{_greedydata:filename}\t%{_greedydata:duration}\t%{_greedydata:local_orig}\t%{_greedydata:is_orig}\t%{_greedydata:seen_bytes}\t%{_greedydata:total_bytes}\t%{_greedydata:missing_bytes}\t%{_greedydata:overflow_bytes}\t%{_greedydata:timedout}\t%{_greedydata:parent_fuid}\t%{_greedydata:md5}\t%{_greedydata:sha1}\t%{_greedydata:sha256}\t%{_greedydata:extracted}`},
    },

    "exim" : {
		{"_exim_msgid", `[0-9A-Za-z]{6}-[0-9A-Za-z]{6}-[0-9A-Za-z]{2}`},
		{"_exim_flags", `(<=|[-=>*]>|[*]{2}|==)`},
		{"_exim_date", `%{_year:exim_year}-%{_monthnum:exim_month}-%{_monthday:exim_day} %{_time:exim_time}`},
		{"_exim_pid", `\[%{_posint}\]`},
		{"_exim_qt", `((\d+y)?(\d+w)?(\d+d)?(\d+h)?(\d+m)?(\d+s)?)`},
		{"_exim_exclude_terms", `(Message is frozen|(Start|End) queue run| Warning: | retry time not reached | no (IP address|host name) found for (IP address|host) | unexpected disconnection while reading SMTP command | no immediate delivery: |another process is handling this message)`},
		{"_exim_remote_host", `(H=(%{_notspace:remote_hostname} )?(\(%{_notspace:remote_heloname}\) )?\[%{_ip:remote_host}\])`},
		{"_exim_interface", `(I=\[%{_ip:exim_interface}\](:%{_number:exim_interface_port}))`},
		{"_exim_protocol", `(P=%{_notspace:protocol})`},
		{"_exim_msg_size", `(S=%{_number:exim_msg_size})`},
		{"_exim_header_id", `(id=%{_notspace:exim_header_id})`},
		{"_exim_subject", `(T=%{_qs:exim_subject})`},
    },

    "firewalls" : {
		{"_netscreensessionlog", `%{_syslogtimestamp:date} %{_iporhost:device} %{_iporhost}: NetScreen device_id=%{_word:device_id}%{_data}: start_time=%{_quotedstring:start_time} duration=%{_int:duration} policy_id=%{_int:policy_id} service=%{_data:service} proto=%{_int:proto} src zone=%{_word:src_zone} dst zone=%{_word:dst_zone} action=%{_word:action} sent=%{_int:sent} rcvd=%{_int:rcvd} src=%{_iporhost:src_ip} dst=%{_iporhost:dst_ip} src_port=%{_int:src_port} dst_port=%{_int:dst_port} src-xlated ip=%{_iporhost:src_xlated_ip} port=%{_int:src_xlated_port} dst-xlated ip=%{_iporhost:dst_xlated_ip} port=%{_int:dst_xlated_port} session_id=%{_int:session_id} reason=%{_greedydata:reason}`},
		{"_cisco_tagged_syslog", `^<%{_posint:syslog_pri}>%{_ciscotimestamp:timestamp}( %{_sysloghost:sysloghost})? ?: %%{_ciscotag:ciscotag}:`},
		{"_ciscotimestamp", `%{_month} +%{_monthday}(?: %{_year})? %{_time}`},
		{"_ciscotag", `[A-Z0-9]+-%{_int}-(?:[A-Z0-9_]+)`},
		{"_cisco_action", `Built|Teardown|Deny|Denied|denied|requested|permitted|denied by ACL|discarded|est-allowed|Dropping|created|deleted`},
		{"_cisco_reason", `Duplicate TCP SYN|Failed to locate egress interface|Invalid transport field|No matching connection|DNS Response|DNS Query|(?:%{_word}\s*)*`},
		{"_cisco_direction", `Inbound|inbound|Outbound|outbound`},
		{"_cisco_interval", `first hit|%{_int}-second interval`},
		{"_cisco_xlate_type", `static|dynamic`},
		{"_ciscofw104001", `\((?:Primary|Secondary)\) Switching to ACTIVE - %{_greedydata:switch_reason}`},
		{"_ciscofw104002", `\((?:Primary|Secondary)\) Switching to STANDBY - %{_greedydata:switch_reason}`},
		{"_ciscofw104003", `\((?:Primary|Secondary)\) Switching to FAILED\.`},
		{"_ciscofw104004", `\((?:Primary|Secondary)\) Switching to OK\.`},
		{"_ciscofw105003", `\((?:Primary|Secondary)\) Monitoring on [Ii]nterface %{_greedydata:interface_name} waiting`},
		{"_ciscofw105004", `\((?:Primary|Secondary)\) Monitoring on [Ii]nterface %{_greedydata:interface_name} normal`},
		{"_ciscofw105005", `\((?:Primary|Secondary)\) Lost Failover communications with mate on [Ii]nterface %{_greedydata:interface_name}`},
		{"_ciscofw105008", `\((?:Primary|Secondary)\) Testing [Ii]nterface %{_greedydata:interface_name}`},
		{"_ciscofw105009", `\((?:Primary|Secondary)\) Testing on [Ii]nterface %{_greedydata:interface_name} (?:Passed|Failed)`},
		{"_ciscofw106001", `%{_cisco_direction:direction} %{_word:protocol} connection %{_cisco_action:action} from %{_ip:src_ip}/%{_int:src_port} to %{_ip:dst_ip}/%{_int:dst_port} flags %{_greedydata:tcp_flags} on interface %{_greedydata:interface}`},
		{"_ciscofw106006_106007_106010", `%{_cisco_action:action} %{_cisco_direction:direction} %{_word:protocol} (?:from|src) %{_ip:src_ip}/%{_int:src_port}(\(%{_data:src_fwuser}\))? (?:to|dst) %{_ip:dst_ip}/%{_int:dst_port}(\(%{_data:dst_fwuser}\))? (?:on interface %{_data:interface}|due to %{_cisco_reason:reason})`},
		{"_ciscofw106014", `%{_cisco_action:action} %{_cisco_direction:direction} %{_word:protocol} src %{_data:src_interface}:%{_ip:src_ip}(\(%{_data:src_fwuser}\))? dst %{_data:dst_interface}:%{_ip:dst_ip}(\(%{_data:dst_fwuser}\))? \(type %{_int:icmp_type}, code %{_int:icmp_code}\)`},
		{"_ciscofw106015", `%{_cisco_action:action} %{_word:protocol} \(%{_data:policy_id}\) from %{_ip:src_ip}/%{_int:src_port} to %{_ip:dst_ip}/%{_int:dst_port} flags %{_data:tcp_flags}  on interface %{_greedydata:interface}`},
		{"_ciscofw106021", `%{_cisco_action:action} %{_word:protocol} reverse path check from %{_ip:src_ip} to %{_ip:dst_ip} on interface %{_greedydata:interface}`},
		{"_ciscofw106023", `%{_cisco_action:action}( protocol)? %{_word:protocol} src %{_data:src_interface}:%{_data:src_ip}(/%{_int:src_port})?(\(%{_data:src_fwuser}\))? dst %{_data:dst_interface}:%{_data:dst_ip}(/%{_int:dst_port})?(\(%{_data:dst_fwuser}\))?( \(type %{_int:icmp_type}, code %{_int:icmp_code}\))? by access-group "?%{_data:policy_id}"? \[%{_data:hashcode1}, %{_data:hashcode2}\]`},
		{"_ciscofw106100_2_3", `access-list %{_notspace:policy_id} %{_cisco_action:action} %{_word:protocol} for user '%{_data:src_fwuser}' %{_data:src_interface}/%{_ip:src_ip}\(%{_int:src_port}\) -> %{_data:dst_interface}/%{_ip:dst_ip}\(%{_int:dst_port}\) hit-cnt %{_int:hit_count} %{_cisco_interval:interval} \[%{_data:hashcode1}, %{_data:hashcode2}\]`},
		{"_ciscofw106100", `access-list %{_notspace:policy_id} %{_cisco_action:action} %{_word:protocol} %{_data:src_interface}/%{_ip:src_ip}\(%{_int:src_port}\)(\(%{_data:src_fwuser}\))? -> %{_data:dst_interface}/%{_ip:dst_ip}\(%{_int:dst_port}\)(\(%{_data:src_fwuser}\))? hit-cnt %{_int:hit_count} %{_cisco_interval:interval} \[%{_data:hashcode1}, %{_data:hashcode2}\]`},
		{"_ciscofw110002", `%{_cisco_reason:reason} for %{_word:protocol} from %{_data:src_interface}:%{_ip:src_ip}/%{_int:src_port} to %{_ip:dst_ip}/%{_int:dst_port}`},
		{"_ciscofw302010", `%{_int:connection_count} in use, %{_int:connection_count_max} most used`},
		{"_ciscofw302013_302014_302015_302016", `%{_cisco_action:action}(?: %{_cisco_direction:direction})? %{_word:protocol} connection %{_int:connection_id} for %{_data:src_interface}:%{_ip:src_ip}/%{_int:src_port}( \(%{_ip:src_mapped_ip}/%{_int:src_mapped_port}\))?(\(%{_data:src_fwuser}\))? to %{_data:dst_interface}:%{_ip:dst_ip}/%{_int:dst_port}( \(%{_ip:dst_mapped_ip}/%{_int:dst_mapped_port}\))?(\(%{_data:dst_fwuser}\))?( duration %{_time:duration} bytes %{_int:bytes})?(?: %{_cisco_reason:reason})?( \(%{_data:user}\))?`},
		{"_ciscofw302020_302021", `%{_cisco_action:action}(?: %{_cisco_direction:direction})? %{_word:protocol} connection for faddr %{_ip:dst_ip}/%{_int:icmp_seq_num}(?:\(%{_data:fwuser}\))? gaddr %{_ip:src_xlated_ip}/%{_int:icmp_code_xlated} laddr %{_ip:src_ip}/%{_int:icmp_code}( \(%{_data:user}\))?`},
		{"_ciscofw305011", `%{_cisco_action:action} %{_cisco_xlate_type:xlate_type} %{_word:protocol} translation from %{_data:src_interface}:%{_ip:src_ip}(/%{_int:src_port})?(\(%{_data:src_fwuser}\))? to %{_data:src_xlated_interface}:%{_ip:src_xlated_ip}/%{_data:src_xlated_port}`},
		{"_ciscofw313001_313004_313008", `%{_cisco_action:action} %{_word:protocol} type=%{_int:icmp_type}, code=%{_int:icmp_code} from %{_ip:src_ip} on interface %{_data:interface}( to %{_ip:dst_ip})?`},
		{"_ciscofw313005", `%{_cisco_reason:reason} for %{_word:protocol} error message: %{_word:err_protocol} src %{_data:err_src_interface}:%{_ip:err_src_ip}(\(%{_data:err_src_fwuser}\))? dst %{_data:err_dst_interface}:%{_ip:err_dst_ip}(\(%{_data:err_dst_fwuser}\))? \(type %{_int:err_icmp_type}, code %{_int:err_icmp_code}\) on %{_data:interface} interface\.  Original _ip payload: %{_word:protocol} src %{_ip:orig_src_ip}/%{_int:orig_src_port}(\(%{_data:orig_src_fwuser}\))? dst %{_ip:orig_dst_ip}/%{_int:orig_dst_port}(\(%{_data:orig_dst_fwuser}\))?`},
		{"_ciscofw321001", `Resource '%{_word:resource_name}' limit of %{_posint:resource_limit} reached for system`},
		{"_ciscofw402117", `%{_word:protocol}: Received a non-_ipSec packet \(protocol= %{_word:orig_protocol}\) from %{_ip:src_ip} to %{_ip:dst_ip}`},
		{"_ciscofw402119", `%{_word:protocol}: Received an %{_word:orig_protocol} packet \(SPI= %{_data:spi}, sequence number= %{_data:seq_num}\) from %{_ip:src_ip} \(user= %{_data:user}\) to %{_ip:dst_ip} that failed anti-replay checking`},
		{"_ciscofw419001", `%{_cisco_action:action} %{_word:protocol} packet from %{_data:src_interface}:%{_ip:src_ip}/%{_int:src_port} to %{_data:dst_interface}:%{_ip:dst_ip}/%{_int:dst_port}, reason: %{_greedydata:reason}`},
		{"_ciscofw419002", `%{_cisco_reason:reason} from %{_data:src_interface}:%{_ip:src_ip}/%{_int:src_port} to %{_data:dst_interface}:%{_ip:dst_ip}/%{_int:dst_port} with different initial sequence number`},
		{"_ciscofw500004", `%{_cisco_reason:reason} for protocol=%{_word:protocol}, from %{_ip:src_ip}/%{_int:src_port} to %{_ip:dst_ip}/%{_int:dst_port}`},
		{"_ciscofw602303_602304", `%{_word:protocol}: An %{_cisco_direction:direction} %{_greedydata:tunnel_type} SA \(SPI= %{_data:spi}\) between %{_ip:src_ip} and %{_ip:dst_ip} \(user= %{_data:user}\) has been %{_cisco_action:action}`},
		{"_ciscofw710001_710002_710003_710005_710006", `%{_word:protocol} (?:request|access) %{_cisco_action:action} from %{_ip:src_ip}/%{_int:src_port} to %{_data:dst_interface}:%{_ip:dst_ip}/%{_int:dst_port}`},
		{"_ciscofw713172", `Group = %{_greedydata:group}, _ip = %{_ip:src_ip}, Automatic NAT Detection Status:\s+Remote end\s*%{_data:is_remote_natted}\s*behind a NAT device\s+This\s+end\s*%{_data:is_local_natted}\s*behind a NAT device`},
		{"_ciscofw733100", `\[\s*%{_data:drop_type}\s*\] drop %{_data:drop_rate_id} exceeded. Current burst rate is %{_int:drop_rate_current_burst} per second, max configured rate is %{_int:drop_rate_max_burst}; Current average rate is %{_int:drop_rate_current_avg} per second, max configured rate is %{_int:drop_rate_max_avg}; Cumulative total count is %{_int:drop_total_count}`},
		{"_shorewall", `(%{_syslogtimestamp:timestamp}) (%{_word:nf_host}) kernel:.*Shorewall:(%{_word:nf_action1})?:(%{_word:nf_action2})?.*IN=(%{_username:nf_in_interface})?.*(OUT= *MAC=(%{_commonmac:nf_dst_mac}):(%{_commonmac:nf_src_mac})?|OUT=%{_username:nf_out_interface}).*SRC=(%{_ipv4:nf_src_ip}).*DST=(%{_ipv4:nf_dst_ip}).*LEN=(%{_word:nf_len}).?*TOS=(%{_word:nf_tos}).?*PREC=(%{_word:nf_prec}).?*TTL=(%{_int:nf_ttl}).?*ID=(%{_int:nf_id}).?*PROTO=(%{_word:nf_protocol}).?*SPT=(%{_int:nf_src_port}?.*DPT=%{_int:nf_dst_port}?.*)`},
    },

    "grok-patterns" : {
		{"_username", `[a-zA-Z0-9._-]+`},
		{"_user", `%{_username}`},
		{"_int", `(?:[+-]?(?:[0-9]+))`},
		{"_base10num", `([+-]?(?:[0-9]+(?:\.[0-9]+)?)|\.[0-9]+)`},
		{"_number", `(?:%{_base10num})`},
		{"_base16num", `(0[xX]?[0-9a-fA-F]+)`},
		{"_posint", `\b(?:[1-9][0-9]*)\b`},
		{"_nonnegint", `\b(?:[0-9]+)\b`},
		{"_word", `\b\w+\b`},
		{"_notspace", `\S+`},
		{"_space", `\s*`},
		{"_data", `.*?`},
		{"_greedydata", `.*`},
		{"_quotedstring", `"([^"\\]*(\\.[^"\\]*)*)"|\'([^\'\\]*(\\.[^\'\\]*)*)\'`},
		{"_uuid", `[A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}`},
		{"_mac", `(?:%{_ciscomac}|%{_windowsmac}|%{_commonmac})`},
		{"_ciscomac", `(?:(?:[A-Fa-f0-9]{4}\.){2}[A-Fa-f0-9]{4})`},
		{"_windowsmac", `(?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})`},
		{"_commonmac", `(?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})`},
		{"_ipv6", `((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?`},
		{"_ipv4", `(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)`},
		{"_ip", `(?:%{_ipv6}|%{_ipv4})`},
		{"_hostname", `\b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)`},
		{"_host", `%{_hostname}`},
		{"_iporhost", `(?:%{_hostname}|%{_ip})`},
		{"_hostport", `%{_iporhost}:%{_posint}`},
		{"_path", `(?:%{_unixpath}|%{_winpath})`},
		{"_unixpath", `(/[\w_%!$@:.,-]?/?)(\S+)?`},
		{"_tty", `(?:/dev/(pts|tty([pq])?)(\w+)?/?(?:[0-9]+))`},
		{"_winpath", `([A-Za-z]:|\\)(?:\\[^\\?*]*)+`},
		{"_uriproto", `[A-Za-z]+(\+[A-Za-z+]+)?`},
		{"_urihost", `%{_iporhost}(?::%{_posint:port})?`},
		{"_uripath", `(?:/[A-Za-z0-9$.+!*'(){},~:;=@#%_\-]*)+`},
		{"_uriparam", `\?[A-Za-z0-9$.+!*'|(){},~@#%&/=:;_?\-\[\]]*`},
		{"_uripathparam", `%{_uripath}(?:%{_uriparam})?`},
		{"_uri", `%{_uriproto}://(?:%{_user}(?::[^@]*)?@)?(?:%{_urihost})?(?:%{_uripathparam})?`},
		{"_month", `\b(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\b`},
		{"_monthnum", `(?:0?[1-9]|1[0-2])`},
		{"_monthday", `(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])`},
		{"_day", `(?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)`},
		{"_year", `(\d\d){1,2}`},
		{"_hour", `(?:2[0123]|[01]?[0-9])`},
		{"_minute", `(?:[0-5][0-9])`},
		{"_second", `(?:(?:[0-5][0-9]|60)(?:[:.,][0-9]+)?)`},
		{"_time", `([^0-9]?)%{_hour}:%{_minute}(?::%{_second})([^0-9]?)`},
		{"_date_us", `%{_monthnum}[/-]%{_monthday}[/-]%{_year}`},
		{"_date_eu", `%{_monthday}[./-]%{_monthnum}[./-]%{_year}`},
		{"_iso8601_timezone", `(?:Z|[+-]%{_hour}(?::?%{_minute}))`},
		{"_iso8601_second", `(?:%{_second}|60)`},
		{"_timestamp_iso8601", `%{_year}-%{_monthnum}-%{_monthday}[T ]%{_hour}:?%{_minute}(?::?%{_second})?%{_iso8601_timezone}?`},
		{"_date", `%{_date_us}|%{_date_eu}`},
		{"_datestamp", `%{_date}[- ]%{_time}`},
		{"_tz", `(?:[PMCE][SD]T|UTC|GMT)`},
		{"_datestamp_rfc822", `%{_day} %{_month} %{_monthday} %{_year} %{_time} %{_tz}`},
		{"_datestamp_other", `%{_day} %{_month} %{_monthday} %{_time} %{_tz} %{_year}`},
		{"_syslogtimestamp", `%{_month} +%{_monthday} %{_time}`},
		{"_prog", `(?:[\w._/%-]+)`},
		{"_syslogprog", `%{_prog:program}(?:\[%{_posint:pid}\])?`},
		{"_sysloghost", `%{_iporhost}`},
		{"_syslogfacility", `<%{_nonnegint:facility}.%{_nonnegint:priority}>`},
		{"_httpdate", `%{_monthday}/%{_month}/%{_year}:%{_time} %{_int}`},
		{"_qs", `%{_quotedstring}`},
		{"_syslogbase", `%{_syslogtimestamp:timestamp} (?:%{_syslogfacility} )?%{_sysloghost:logsource} %{_syslogprog}:`},
		{"_commonapachelog", `%{_iporhost:clientip} %{_user:ident} %{_user:auth} \[%{_httpdate:timestamp}\] "(?:%{_word:verb} %{_notspace:request}(?: HTTP/%{_number:httpversion})?|%{_data:rawrequest})" %{_number:response} (?:%{_number:bytes}|-)`},
		{"_combinedapachelog", `%{_commonapachelog} %{_qs:referrer} %{_qs:agent}`},
		{"_loglevel", `([A-a]lert|ALERT|[T|t]race|TRACE|[D|d]ebug|DEBUG|[N|n]otice|NOTICE|[I|i]nfo|INFO|[W|w]arn?(?:ing)?|WARN?(?:ING)?|[E|e]rr?(?:or)?|ERR?(?:OR)?|[C|c]rit?(?:ical)?|CRIT?(?:ICAL)?|[F|f]atal|FATAL|[S|s]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)`},
    },

    "haproxy" : {
		{"_haproxytime", `(?!<[0-9])%{_hour:haproxy_hour}:%{_minute:haproxy_minute}(?::%{_second:haproxy_second})(?![0-9])`},
		{"_haproxydate", `%{_monthday:haproxy_monthday}/%{_month:haproxy_month}/%{_year:haproxy_year}:%{_haproxytime:haproxy_time}.%{_int:haproxy_milliseconds}`},
		{"_haproxycapturedrequestheaders", `%{_data:captured_request_headers}`},
		{"_haproxycapturedresponseheaders", `%{_data:captured_response_headers}`},
		{"_haproxyhttpbase", `%{_ip:client_ip}:%{_int:client_port} \[%{_haproxydate:accept_date}\] %{_notspace:frontend_name} %{_notspace:backend_name}/%{_notspace:server_name} %{_int:time_request}/%{_int:time_queue}/%{_int:time_backend_connect}/%{_int:time_backend_response}/%{_notspace:time_duration} %{_int:http_status_code} %{_notspace:bytes_read} %{_data:captured_request_cookie} %{_data:captured_response_cookie} %{_notspace:termination_state} %{_int:actconn}/%{_int:feconn}/%{_int:beconn}/%{_int:srvconn}/%{_notspace:retries} %{_int:srv_queue}/%{_int:backend_queue} (\{%{_haproxycapturedrequestheaders}\})?( )?(\{%{_haproxycapturedresponseheaders}\})?( )?"(<BADREQ>|(%{_word:http_verb} (%{_uriproto:http_proto}://)?(?:%{_user:http_user}(?::[^@]*)?@)?(?:%{_urihost:http_host})?(?:%{_uripathparam:http_request})?( HTTP/%{_number:http_version})?))?"`},
		{"_haproxyhttp", `(?:%{_syslogtimestamp:syslog_timestamp}|%{_timestamp_iso8601:timestamp8601}) %{_iporhost:syslog_server} %{_syslogprog}: %{_haproxyhttpbase}`},
		{"_haproxytcp", `(?:%{_syslogtimestamp:syslog_timestamp}|%{_timestamp_iso8601:timestamp8601}) %{_iporhost:syslog_server} %{_syslogprog}: %{_ip:client_ip}:%{_int:client_port} \[%{_haproxydate:accept_date}\] %{_notspace:frontend_name} %{_notspace:backend_name}/%{_notspace:server_name} %{_int:time_queue}/%{_int:time_backend_connect}/%{_notspace:time_duration} %{_notspace:bytes_read} %{_notspace:termination_state} %{_int:actconn}/%{_int:feconn}/%{_int:beconn}/%{_int:srvconn}/%{_notspace:retries} %{_int:srv_queue}/%{_int:backend_queue}`},
    },

    "java" : {
		{"_javaclass", `(?:[a-zA-Z$_][a-zA-Z$_0-9]*\.)*[a-zA-Z$_][a-zA-Z$_0-9]*`},
		{"_javafile", `(?:[A-Za-z0-9_. -]+)`},
		{"_javamethod", `(?:(<init>)|[a-zA-Z$_][a-zA-Z$_0-9]*)`},
		{"_javastacktracepart", `%{_space}at %{_javaclass:class}\.%{_javamethod:method}\(%{_javafile:file}(?::%{_number:line})?\)`},
		{"_javathread", `(?:[A-Z]{2}-Processor[\d]+)`},
		{"_javaclass", `(?:[a-zA-Z0-9-]+\.)+[A-Za-z0-9$]+`},
		{"_javafile", `(?:[A-Za-z0-9_.-]+)`},
		{"_javastacktracepart", `at %{_javaclass:class}\.%{_word:method}\(%{_javafile:file}:%{_number:line}\)`},
		{"_javalogmessage", `(.*)`},
		{"_catalina_datestamp", `%{_month} %{_monthday}, 20%{_year} %{_hour}:?%{_minute}(?::?%{_second}) (?:AM|PM)`},
		{"_tomcat_datestamp", `20%{_year}-%{_monthnum}-%{_monthday} %{_hour}:?%{_minute}(?::?%{_second}) %{_iso8601_timezone}`},
		{"_catalinalog", `%{_catalina_datestamp:timestamp} %{_javaclass:class} %{_javalogmessage:logmessage}`},
		{"_tomcatlog", `%{_tomcat_datestamp:timestamp} \| %{_loglevel:level} \| %{_javaclass:class} - %{_javalogmessage:logmessage}`},
    },

    "junos" : {
		{"_rt_flow_event", `(RT_FLOW_SESSION_CREATE|RT_FLOW_SESSION_CLOSE|RT_FLOW_SESSION_DENY)`},
		{"_rt_flow1", `%{_rt_flow_event:event}: %{GREEDY_data:close-reason}: %{IP:src-ip}/%{INT:src-port}->%{IP:dst-ip}/%{INT:dst-port} %{_data:service} %{IP:nat-src-ip}/%{INT:nat-src-port}->%{IP:nat-dst-ip}/%{INT:nat-dst-port} %{_data:src-nat-rule-name} %{_data:dst-nat-rule-name} %{INT:protocol-id} %{_data:policy-name} %{_data:from-zone} %{_data:to-zone} %{INT:session-id} \d+\(%{_data:sent}\) \d+\(%{_data:received}\) %{INT:elapsed-time} .*`},
		{"_rt_flow2", `%{_rt_flow_event:event}: session created %{IP:src-ip}/%{INT:src-port}->%{IP:dst-ip}/%{INT:dst-port} %{_data:service} %{IP:nat-src-ip}/%{INT:nat-src-port}->%{IP:nat-dst-ip}/%{INT:nat-dst-port} %{_data:src-nat-rule-name} %{_data:dst-nat-rule-name} %{INT:protocol-id} %{_data:policy-name} %{_data:from-zone} %{_data:to-zone} %{INT:session-id} .*`},
		{"_rt_flow3", `%{_rt_flow_event:event}: session denied %{IP:src-ip}/%{INT:src-port}->%{IP:dst-ip}/%{INT:dst-port} %{_data:service} %{INT:protocol-id}\(\d\) %{_data:policy-name} %{_data:from-zone} %{_data:to-zone} .*`},
    },

    "linux-syslog" : {
		{"_syslog5424printascii", `[!-~]+`},
		{"_syslogbase2", `(?:%{_syslogtimestamp:timestamp}|%{_timestamp_iso8601:timestamp8601}) (?:%{_syslogfacility} )?%{_sysloghost:logsource}+(?: %{_syslogprog}:|)`},
		{"_syslogpamsession", `%{_syslogbase} (?=%{_greedydata:message})%{_word:pam_module}\(%{_data:pam_caller}\): session %{_word:pam_session_state} for user %{_username:username}(?: by %{_greedydata:pam_by})?`},
		{"_cron_action", `[A-Z ]+`},
		{"_cronlog", `%{_syslogbase} \(%{_user:user}\) %{_cron_action:action} \(%{_data:message}\)`},
		{"_syslogline", `%{_syslogbase2} %{_greedydata:message}`},
		{"_syslog5424pri", `<%{_nonnegint:syslog5424_pri}>`},
		{"_syslog5424sd", `\[%{_data}\]+`},
		{"_syslog5424base", `%{_syslog5424pri}%{_nonnegint:syslog5424_ver} +(?:%{_timestamp_iso8601:syslog5424_ts}|-) +(?:%{_hostname:syslog5424_host}|-) +(-|%{_syslog5424printascii:syslog5424_app}) +(-|%{_syslog5424printascii:syslog5424_proc}) +(-|%{_syslog5424printascii:syslog5424_msgid}) +(?:%{_syslog5424sd:syslog5424_sd}|-|)`},
		{"_syslog5424line", `%{_syslog5424base} +%{_greedydata:syslog5424_msg}`},
    },

    "mcollective" : {
		{"_mcollectiveaudit", `%{_timestamp_iso8601:timestamp}:`},
    },

    "mcollective-patterns" : {
		{"_mcollective", `., \[%{_timestamp_iso8601:timestamp} #%{_posint:pid}\]%{_space}%{_loglevel:event_level}`},
		{"_mcollectiveaudit", `%{_timestamp_iso8601:timestamp}:`},
    },

    "mongodb" : {
		{"_mongo_log", `%{_syslogtimestamp:timestamp} \[%{_word:component}\] %{_greedydata:message}`},
		{"_mongo_query", `\{ (?<={ ).*(?= } ntoreturn:) \}`},
		{"_mongo_slowquery", `%{_word} %{_mongo_worddash:database}\.%{_mongo_worddash:collection} %{_word}: %{_mongo_query:query} %{_word}:%{_nonnegint:ntoreturn} %{_word}:%{_nonnegint:ntoskip} %{_word}:%{_nonnegint:nscanned}.*nreturned:%{_nonnegint:nreturned}..+ (?<duration>[0-9]+)ms`},
		{"_mongo_worddash", `\b[\w-]+\b`},
		{"_mongo3_severity", `\w`},
		{"_mongo3_component", `%{_word}|-`},
		{"_mongo3_log", `%{_timestamp_iso8601:timestamp} %{_mongo3_severity:severity} %{_mongo3_component:component}%{_space}(?:\[%{_data:context}\])? %{_greedydata:message}`},
    },

    "nagios" : {
		{"_nagiostime", `\[%{_number:nagios_epoch}\]`},
		{"_nagios_type_current_service_state", `CURRENT SERVICE STATE`},
		{"_nagios_type_current_host_state", `CURRENT HOST STATE`},
		{"_nagios_type_service_notification", `SERVICE NOTIFICATION`},
		{"_nagios_type_host_notification", `HOST NOTIFICATION`},
		{"_nagios_type_service_alert", `SERVICE ALERT`},
		{"_nagios_type_host_alert", `HOST ALERT`},
		{"_nagios_type_service_flapping_alert", `SERVICE FLAPPING ALERT`},
		{"_nagios_type_host_flapping_alert", `HOST FLAPPING ALERT`},
		{"_nagios_type_service_downtime_alert", `SERVICE DOWNTIME ALERT`},
		{"_nagios_type_host_downtime_alert", `HOST DOWNTIME ALERT`},
		{"_nagios_type_passive_service_check", `PASSIVE SERVICE CHECK`},
		{"_nagios_type_passive_host_check", `PASSIVE HOST CHECK`},
		{"_nagios_type_service_event_handler", `SERVICE EVENT HANDLER`},
		{"_nagios_type_host_event_handler", `HOST EVENT HANDLER`},
		{"_nagios_type_external_command", `EXTERNAL COMMAND`},
		{"_nagios_type_timeperiod_transition", `TIMEPERIOD TRANSITION`},
		{"_nagios_ec_disable_svc_check", `DISABLE_SVC_CHECK`},
		{"_nagios_ec_enable_svc_check", `ENABLE_SVC_CHECK`},
		{"_nagios_ec_disable_host_check", `DISABLE_HOST_CHECK`},
		{"_nagios_ec_enable_host_check", `ENABLE_HOST_CHECK`},
		{"_nagios_ec_process_service_check_result", `PROCESS_SERVICE_CHECK_RESULT`},
		{"_nagios_ec_process_host_check_result", `PROCESS_HOST_CHECK_RESULT`},
		{"_nagios_ec_schedule_service_downtime", `SCHEDULE_SERVICE_DOWNTIME`},
		{"_nagios_ec_schedule_host_downtime", `SCHEDULE_HOST_DOWNTIME`},
		{"_nagios_ec_disable_host_svc_notifications", `DISABLE_HOST_SVC_NOTIFICATIONS`},
		{"_nagios_ec_enable_host_svc_notifications", `ENABLE_HOST_SVC_NOTIFICATIONS`},
		{"_nagios_ec_disable_host_notifications", `DISABLE_HOST_NOTIFICATIONS`},
		{"_nagios_ec_enable_host_notifications", `ENABLE_HOST_NOTIFICATIONS`},
		{"_nagios_ec_disable_svc_notifications", `DISABLE_SVC_NOTIFICATIONS`},
		{"_nagios_ec_enable_svc_notifications", `ENABLE_SVC_NOTIFICATIONS`},
		{"_nagios_warning", `Warning:%{_space}%{_greedydata:nagios_message}`},
		{"_nagios_current_service_state", `%{_nagios_type_current_service_state:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_data:nagios_statetype};%{_data:nagios_statecode};%{_greedydata:nagios_message}`},
		{"_nagios_current_host_state", `%{_nagios_type_current_host_state:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_state};%{_data:nagios_statetype};%{_data:nagios_statecode};%{_greedydata:nagios_message}`},
		{"_nagios_service_notification", `%{_nagios_type_service_notification:nagios_type}: %{_data:nagios_notifyname};%{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_data:nagios_contact};%{_greedydata:nagios_message}`},
		{"_nagios_host_notification", `%{_nagios_type_host_notification:nagios_type}: %{_data:nagios_notifyname};%{_data:nagios_hostname};%{_data:nagios_state};%{_data:nagios_contact};%{_greedydata:nagios_message}`},
		{"_nagios_service_alert", `%{_nagios_type_service_alert:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_data:nagios_statelevel};%{_number:nagios_attempt};%{_greedydata:nagios_message}`},
		{"_nagios_host_alert", `%{_nagios_type_host_alert:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_state};%{_data:nagios_statelevel};%{_number:nagios_attempt};%{_greedydata:nagios_message}`},
		{"_nagios_service_flapping_alert", `%{_nagios_type_service_flapping_alert:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_greedydata:nagios_message}`},
		{"_nagios_host_flapping_alert", `%{_nagios_type_host_flapping_alert:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_state};%{_greedydata:nagios_message}`},
		{"_nagios_service_downtime_alert", `%{_nagios_type_service_downtime_alert:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_greedydata:nagios_comment}`},
		{"_nagios_host_downtime_alert", `%{_nagios_type_host_downtime_alert:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_state};%{_greedydata:nagios_comment}`},
		{"_nagios_passive_service_check", `%{_nagios_type_passive_service_check:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_greedydata:nagios_comment}`},
		{"_nagios_passive_host_check", `%{_nagios_type_passive_host_check:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_state};%{_greedydata:nagios_comment}`},
		{"_nagios_service_event_handler", `%{_nagios_type_service_event_handler:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_data:nagios_statelevel};%{_data:nagios_event_handler_name}`},
		{"_nagios_host_event_handler", `%{_nagios_type_host_event_handler:nagios_type}: %{_data:nagios_hostname};%{_data:nagios_state};%{_data:nagios_statelevel};%{_data:nagios_event_handler_name}`},
		{"_nagios_timeperiod_transition", `%{_nagios_type_timeperiod_transition:nagios_type}: %{_data:nagios_service};%{_data:nagios_unknown1};%{_data:nagios_unknown2}`},
		{"_nagios_ec_line_disable_svc_check", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_disable_svc_check:nagios_command};%{_data:nagios_hostname};%{_data:nagios_service}`},
		{"_nagios_ec_line_disable_host_check", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_disable_host_check:nagios_command};%{_data:nagios_hostname}`},
		{"_nagios_ec_line_enable_svc_check", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_enable_svc_check:nagios_command};%{_data:nagios_hostname};%{_data:nagios_service}`},
		{"_nagios_ec_line_enable_host_check", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_enable_host_check:nagios_command};%{_data:nagios_hostname}`},
		{"_nagios_ec_line_process_service_check_result", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_process_service_check_result:nagios_command};%{_data:nagios_hostname};%{_data:nagios_service};%{_data:nagios_state};%{_greedydata:nagios_check_result}`},
		{"_nagios_ec_line_process_host_check_result", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_process_host_check_result:nagios_command};%{_data:nagios_hostname};%{_data:nagios_state};%{_greedydata:nagios_check_result}`},
		{"_nagios_ec_line_disable_host_svc_notifications", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_disable_host_svc_notifications:nagios_command};%{_greedydata:nagios_hostname}`},
		{"_nagios_ec_line_disable_host_notifications", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_disable_host_notifications:nagios_command};%{_greedydata:nagios_hostname}`},
		{"_nagios_ec_line_disable_svc_notifications", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_disable_svc_notifications:nagios_command};%{_data:nagios_hostname};%{_greedydata:nagios_service}`},
		{"_nagios_ec_line_enable_host_svc_notifications", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_enable_host_svc_notifications:nagios_command};%{_greedydata:nagios_hostname}`},
		{"_nagios_ec_line_enable_host_notifications", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_enable_host_notifications:nagios_command};%{_greedydata:nagios_hostname}`},
		{"_nagios_ec_line_enable_svc_notifications", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_enable_svc_notifications:nagios_command};%{_data:nagios_hostname};%{_greedydata:nagios_service}`},
		{"_nagios_ec_line_schedule_host_downtime", `%{_nagios_type_external_command:nagios_type}: %{_nagios_ec_schedule_host_downtime:nagios_command};%{_data:nagios_hostname};%{_number:nagios_start_time};%{_number:nagios_end_time};%{_number:nagios_fixed};%{_number:nagios_trigger_id};%{_number:nagios_duration};%{_data:author};%{_data:comment}`},
		{"_nagioslogline", `%{_nagiostime} (?:%{_nagios_warning}|%{_nagios_current_service_state}|%{_nagios_current_host_state}|%{_nagios_service_notification}|%{_nagios_host_notification}|%{_nagios_service_alert}|%{_nagios_host_alert}|%{_nagios_service_flapping_alert}|%{_nagios_host_flapping_alert}|%{_nagios_service_downtime_alert}|%{_nagios_host_downtime_alert}|%{_nagios_passive_service_check}|%{_nagios_passive_host_check}|%{_nagios_service_event_handler}|%{_nagios_host_event_handler}|%{_nagios_timeperiod_transition}|%{_nagios_ec_line_disable_svc_check}|%{_nagios_ec_line_enable_svc_check}|%{_nagios_ec_line_disable_host_check}|%{_nagios_ec_line_enable_host_check}|%{_nagios_ec_line_process_host_check_result}|%{_nagios_ec_line_process_service_check_result}|%{_nagios_ec_line_schedule_host_downtime}|%{_nagios_ec_line_disable_host_svc_notifications}|%{_nagios_ec_line_enable_host_svc_notifications}|%{_nagios_ec_line_disable_host_notifications}|%{_nagios_ec_line_enable_host_notifications}|%{_nagios_ec_line_disable_svc_notifications}|%{_nagios_ec_line_enable_svc_notifications})`},
    },

    "postgresql" : {
		{"_postgresql", `%{_datestamp:timestamp} %{_tz} %{_data:user_id} %{_greedydata:connection_id} %{_posint:pid}`},
    },

    "rails" : {
		{"_ruuid", `\h{32}`},
		{"_rcontroller", `(?<controller>[^#]+)#(?<action>\w+)`},
		{"_rails3head", `(?m)Started %{_word:verb} "%{_uripathparam:request}" for %{_iporhost:clientip} at (?<timestamp>%{_year}-%{_monthnum}-%{_monthday} %{_hour}:%{_minute}:%{_second} %{_iso8601_timezone})`},
		{"_rprocessing", `\W*Processing by %{_rcontroller} as (?<format>\S+)(?:\W*Parameters: {%{_data:params}}\W*)?`},
		{"_rails3foot", `Completed %{_number:response}%{_data} in %{_number:totalms}ms %{_rails3profile}%{_greedydata}`},
		{"_rails3profile", `(?:\(Views: %{_number:viewms}ms \| ActiveRecord: %{_number:activerecordms}ms|\(ActiveRecord: %{_number:activerecordms}ms)?`},
		{"_rails3", `%{_rails3head}(?:%{_rprocessing})?(?<context>(?:%{_data}\n)*)(?:%{_rails3foot})?`},
    },

    "redis" : {
		{"_redistimestamp", `%{_monthday} %{_month} %{_time}`},
		{"_redislog", `\[%{_posint:pid}\] %{_redistimestamp:timestamp} \*`},
    },

    "ruby" : {
		{"_ruby_loglevel", `(?:DEBUG|FATAL|ERROR|WARN|INFO)`},
		{"_ruby_logger", `[DFEWI], \[%{_timestamp_iso8601:timestamp} #%{_posint:pid}\] *%{_ruby_loglevel:loglevel} -- +%{_data:progname}: %{_greedydata:message}`},
    },

}