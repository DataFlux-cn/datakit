
state 0
	$accept: .start $end 

	error  shift 3
	START_FUNC_EXPRESSION  shift 2
	.  error

	start  goto 1

state 1
	$accept:  start.$end 
	start:  start.EOF 

	$end  accept
	EOF  shift 4
	.  error


state 2
	start:  START_FUNC_EXPRESSION.function_exprs 

	ID  shift 9
	QUOTED_STRING  shift 10
	IDENTIFIER  shift 11
	.  error

	function_name  goto 7
	identifier  goto 8
	function_exprs  goto 5
	function_expr  goto 6

state 3
	start:  error.    (3)

	.  reduce 3 (src line 84)


state 4
	start:  start EOF.    (2)

	.  reduce 2 (src line 83)


state 5
	start:  START_FUNC_EXPRESSION function_exprs.    (1)
	function_exprs:  function_exprs.SEMICOLON function_expr 
	function_exprs:  function_exprs.SEMICOLON 

	SEMICOLON  shift 12
	.  reduce 1 (src line 79)


state 6
	function_exprs:  function_expr.    (4)

	.  reduce 4 (src line 90)


state 7
	function_expr:  function_name.LEFT_PAREN function_args RIGHT_PAREN 

	LEFT_PAREN  shift 13
	.  error


state 8
	function_name:  identifier.    (51)

	.  reduce 51 (src line 289)


state 9
	identifier:  ID.    (58)

	.  reduce 58 (src line 336)


state 10
	identifier:  QUOTED_STRING.    (59)

	.  reduce 59 (src line 337)


state 11
	identifier:  IDENTIFIER.LEFT_PAREN string_literal RIGHT_PAREN 

	LEFT_PAREN  shift 14
	.  error


state 12
	function_exprs:  function_exprs SEMICOLON.function_expr 
	function_exprs:  function_exprs SEMICOLON.    (6)

	ID  shift 9
	QUOTED_STRING  shift 10
	IDENTIFIER  shift 11
	.  reduce 6 (src line 99)

	function_name  goto 7
	identifier  goto 8
	function_expr  goto 15

state 13
	function_expr:  function_name LEFT_PAREN.function_args RIGHT_PAREN 
	function_args: .    (26)

	ID  shift 9
	LEFT_PAREN  shift 33
	LEFT_BRACKET  shift 19
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  reduce 26 (src line 169)

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	function_args  goto 16
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 18
	function_arg  goto 17
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 14
	identifier:  IDENTIFIER LEFT_PAREN.string_literal RIGHT_PAREN 

	STRING  shift 36
	.  error

	string_literal  goto 44

state 15
	function_exprs:  function_exprs SEMICOLON function_expr.    (5)

	.  reduce 5 (src line 94)


state 16
	function_expr:  function_name LEFT_PAREN function_args.RIGHT_PAREN 
	function_args:  function_args.COMMA function_arg 
	function_args:  function_args.COMMA 

	COMMA  shift 46
	RIGHT_PAREN  shift 45
	.  error


state 17
	function_args:  function_arg.    (25)

	.  reduce 25 (src line 165)


state 18
	function_arg:  expr.    (27)
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	GTE  shift 49
	GT  shift 50
	LT  shift 53
	LTE  shift 54
	MOD  shift 55
	MUL  shift 56
	NEQ  shift 57
	EQ  shift 60
	POW  shift 58
	SUB  shift 59
	AND  shift 51
	OR  shift 52
	.  reduce 27 (src line 176)


state 19
	function_arg:  LEFT_BRACKET.array_list RIGHT_BRACKET 
	array_list: .    (31)

	ID  shift 9
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	.  reduce 31 (src line 196)

	unary_op  goto 35
	identifier  goto 63
	array_elem  goto 62
	array_list  goto 61
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 20
	expr:  array_elem.    (7)

	.  reduce 7 (src line 106)


state 21
	expr:  regex.    (8)

	.  reduce 8 (src line 106)


state 22
	expr:  jpath.    (9)

	.  reduce 9 (src line 106)


state 23
	expr:  paren_expr.    (10)

	.  reduce 10 (src line 106)


state 24
	expr:  function_expr.    (11)

	.  reduce 11 (src line 106)


state 25
	expr:  binary_expr.    (12)

	.  reduce 12 (src line 106)


state 26
	array_elem:  number_literal.    (32)

	.  reduce 32 (src line 202)


state 27
	array_elem:  string_literal.    (33)

	.  reduce 33 (src line 203)


state 28
	array_elem:  columnref.    (34)

	.  reduce 34 (src line 204)


state 29
	array_elem:  nil_literal.    (35)

	.  reduce 35 (src line 205)


state 30
	array_elem:  bool_literal.    (36)

	.  reduce 36 (src line 206)


state 31
	regex:  RE.LEFT_PAREN string_literal RIGHT_PAREN 
	regex:  RE.LEFT_PAREN QUOTED_STRING RIGHT_PAREN 

	LEFT_PAREN  shift 64
	.  error


state 32
	jpath:  JP.LEFT_PAREN string_literal RIGHT_PAREN 
	jpath:  JP.LEFT_PAREN QUOTED_STRING RIGHT_PAREN 

	LEFT_PAREN  shift 65
	.  error


state 33
	paren_expr:  LEFT_PAREN.expr RIGHT_PAREN 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 66
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 34
	number_literal:  NUMBER.    (52)

	.  reduce 52 (src line 296)


state 35
	number_literal:  unary_op.NUMBER 

	NUMBER  shift 67
	.  error


state 36
	string_literal:  STRING.    (16)

	.  reduce 16 (src line 120)


state 37
	columnref:  identifier.    (13)
	function_name:  identifier.    (51)

	LEFT_PAREN  reduce 51 (src line 289)
	.  reduce 13 (src line 109)


state 38
	nil_literal:  NIL.    (17)

	.  reduce 17 (src line 126)


state 39
	nil_literal:  NULL.    (18)

	.  reduce 18 (src line 130)


state 40
	bool_literal:  TRUE.    (19)

	.  reduce 19 (src line 136)


state 41
	bool_literal:  FALSE.    (20)

	.  reduce 20 (src line 140)


state 42
	unary_op:  ADD.    (14)

	.  reduce 14 (src line 116)


state 43
	unary_op:  SUB.    (15)

	.  reduce 15 (src line 117)


state 44
	identifier:  IDENTIFIER LEFT_PAREN string_literal.RIGHT_PAREN 

	RIGHT_PAREN  shift 68
	.  error


state 45
	function_expr:  function_name LEFT_PAREN function_args RIGHT_PAREN.    (22)

	.  reduce 22 (src line 152)


state 46
	function_args:  function_args COMMA.function_arg 
	function_args:  function_args COMMA.    (24)

	ID  shift 9
	LEFT_PAREN  shift 33
	LEFT_BRACKET  shift 19
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  reduce 24 (src line 164)

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 18
	function_arg  goto 69
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 47
	binary_expr:  expr ADD.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 70
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 48
	binary_expr:  expr DIV.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 71
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 49
	binary_expr:  expr GTE.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 72
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 50
	binary_expr:  expr GT.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 73
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 51
	binary_expr:  expr AND.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 74
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 52
	binary_expr:  expr OR.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 75
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 53
	binary_expr:  expr LT.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 76
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 54
	binary_expr:  expr LTE.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 77
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 55
	binary_expr:  expr MOD.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 78
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 56
	binary_expr:  expr MUL.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 79
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 57
	binary_expr:  expr NEQ.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 80
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 58
	binary_expr:  expr POW.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 81
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 59
	binary_expr:  expr SUB.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 82
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 60
	binary_expr:  expr EQ.expr 

	ID  shift 9
	LEFT_PAREN  shift 33
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	RE  shift 31
	JP  shift 32
	.  error

	unary_op  goto 35
	function_name  goto 7
	identifier  goto 37
	array_elem  goto 20
	binary_expr  goto 25
	expr  goto 83
	function_expr  goto 24
	paren_expr  goto 23
	regex  goto 21
	jpath  goto 22
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 61
	function_arg:  LEFT_BRACKET array_list.RIGHT_BRACKET 
	array_list:  array_list.COMMA array_elem 

	COMMA  shift 85
	RIGHT_BRACKET  shift 84
	.  error


state 62
	array_list:  array_elem.    (30)

	.  reduce 30 (src line 192)


state 63
	columnref:  identifier.    (13)

	.  reduce 13 (src line 109)


state 64
	regex:  RE LEFT_PAREN.string_literal RIGHT_PAREN 
	regex:  RE LEFT_PAREN.QUOTED_STRING RIGHT_PAREN 

	STRING  shift 36
	QUOTED_STRING  shift 87
	.  error

	string_literal  goto 86

state 65
	jpath:  JP LEFT_PAREN.string_literal RIGHT_PAREN 
	jpath:  JP LEFT_PAREN.QUOTED_STRING RIGHT_PAREN 

	STRING  shift 36
	QUOTED_STRING  shift 89
	.  error

	string_literal  goto 88

state 66
	paren_expr:  LEFT_PAREN expr.RIGHT_PAREN 
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	RIGHT_PAREN  shift 90
	ADD  shift 47
	DIV  shift 48
	GTE  shift 49
	GT  shift 50
	LT  shift 53
	LTE  shift 54
	MOD  shift 55
	MUL  shift 56
	NEQ  shift 57
	EQ  shift 60
	POW  shift 58
	SUB  shift 59
	AND  shift 51
	OR  shift 52
	.  error


state 67
	number_literal:  unary_op NUMBER.    (53)

	.  reduce 53 (src line 300)


state 68
	identifier:  IDENTIFIER LEFT_PAREN string_literal RIGHT_PAREN.    (60)

	.  reduce 60 (src line 341)


state 69
	function_args:  function_args COMMA function_arg.    (23)

	.  reduce 23 (src line 160)


state 70
	binary_expr:  expr.ADD expr 
	binary_expr:  expr ADD expr.    (37)
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	.  reduce 37 (src line 209)


state 71
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr DIV expr.    (38)
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 58
	.  reduce 38 (src line 213)


state 72
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr GTE expr.    (39)
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	SUB  shift 59
	.  reduce 39 (src line 217)


state 73
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr GT expr.    (40)
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	SUB  shift 59
	.  reduce 40 (src line 223)


state 74
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr AND expr.    (41)
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	GTE  shift 49
	GT  shift 50
	LT  shift 53
	LTE  shift 54
	MOD  shift 55
	MUL  shift 56
	NEQ  shift 57
	EQ  shift 60
	POW  shift 58
	SUB  shift 59
	.  reduce 41 (src line 229)


state 75
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr OR expr.    (42)
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	GTE  shift 49
	GT  shift 50
	LT  shift 53
	LTE  shift 54
	MOD  shift 55
	MUL  shift 56
	NEQ  shift 57
	EQ  shift 60
	POW  shift 58
	SUB  shift 59
	AND  shift 51
	.  reduce 42 (src line 235)


state 76
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr LT expr.    (43)
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	SUB  shift 59
	.  reduce 43 (src line 241)


state 77
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr LTE expr.    (44)
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	SUB  shift 59
	.  reduce 44 (src line 247)


state 78
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr MOD expr.    (45)
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 58
	.  reduce 45 (src line 253)


state 79
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr MUL expr.    (46)
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 58
	.  reduce 46 (src line 258)


state 80
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr NEQ expr.    (47)
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 47
	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	SUB  shift 59
	.  reduce 47 (src line 263)


state 81
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr POW expr.    (48)
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 58
	.  reduce 48 (src line 269)


state 82
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr SUB expr.    (49)
	binary_expr:  expr.EQ expr 

	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	.  reduce 49 (src line 274)


state 83
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 
	binary_expr:  expr EQ expr.    (50)

	ADD  shift 47
	DIV  shift 48
	MOD  shift 55
	MUL  shift 56
	POW  shift 58
	SUB  shift 59
	.  reduce 50 (src line 279)


state 84
	function_arg:  LEFT_BRACKET array_list RIGHT_BRACKET.    (28)

	.  reduce 28 (src line 180)


state 85
	array_list:  array_list COMMA.array_elem 

	ID  shift 9
	NUMBER  shift 34
	STRING  shift 36
	QUOTED_STRING  shift 10
	ADD  shift 42
	SUB  shift 43
	TRUE  shift 40
	FALSE  shift 41
	IDENTIFIER  shift 11
	NIL  shift 38
	NULL  shift 39
	.  error

	unary_op  goto 35
	identifier  goto 63
	array_elem  goto 91
	bool_literal  goto 30
	string_literal  goto 27
	nil_literal  goto 29
	number_literal  goto 26
	columnref  goto 28

state 86
	regex:  RE LEFT_PAREN string_literal.RIGHT_PAREN 

	RIGHT_PAREN  shift 92
	.  error


state 87
	regex:  RE LEFT_PAREN QUOTED_STRING.RIGHT_PAREN 

	RIGHT_PAREN  shift 93
	.  error


state 88
	jpath:  JP LEFT_PAREN string_literal.RIGHT_PAREN 

	RIGHT_PAREN  shift 94
	.  error


state 89
	jpath:  JP LEFT_PAREN QUOTED_STRING.RIGHT_PAREN 

	RIGHT_PAREN  shift 95
	.  error


state 90
	paren_expr:  LEFT_PAREN expr RIGHT_PAREN.    (21)

	.  reduce 21 (src line 146)


state 91
	array_list:  array_list COMMA array_elem.    (29)

	.  reduce 29 (src line 186)


state 92
	regex:  RE LEFT_PAREN string_literal RIGHT_PAREN.    (54)

	.  reduce 54 (src line 316)


state 93
	regex:  RE LEFT_PAREN QUOTED_STRING RIGHT_PAREN.    (55)

	.  reduce 55 (src line 320)


state 94
	jpath:  JP LEFT_PAREN string_literal RIGHT_PAREN.    (56)

	.  reduce 56 (src line 326)


state 95
	jpath:  JP LEFT_PAREN QUOTED_STRING RIGHT_PAREN.    (57)

	.  reduce 57 (src line 330)


45 terminals, 21 nonterminals
61 grammar rules, 96/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
70 working sets used
memory: parser 375/120000
10 extra closures
393 shift entries, 2 exceptions
47 goto entries
239 entries saved by goto default
Optimizer space used: output 189/120000
189 table entries, 11 zero
maximum spread: 44, maximum offset: 85
