
state 0
	$accept: .start $end 

	error  shift 3
	START_FUNC_EXPRESSION  shift 2
	.  error

	start  goto 1

state 1
	$accept:  start.$end 
	start:  start.EOF 

	$end  accept
	EOF  shift 4
	.  error


state 2
	start:  START_FUNC_EXPRESSION.function_exprs 

	ID  shift 9
	QUOTED_STRING  shift 10
	IDENTIFIER  shift 11
	.  error

	function_name  goto 7
	identifier  goto 8
	function_exprs  goto 5
	function_expr  goto 6

state 3
	start:  error.    (3)

	.  reduce 3 (src line 84)


state 4
	start:  start EOF.    (2)

	.  reduce 2 (src line 83)


state 5
	start:  START_FUNC_EXPRESSION function_exprs.    (1)
	function_exprs:  function_exprs.SEMICOLON function_expr 
	function_exprs:  function_exprs.function_expr 

	SEMICOLON  shift 12
	ID  shift 9
	QUOTED_STRING  shift 10
	IDENTIFIER  shift 11
	.  reduce 1 (src line 79)

	function_name  goto 7
	identifier  goto 8
	function_expr  goto 13

state 6
	function_exprs:  function_expr.    (4)

	.  reduce 4 (src line 90)


state 7
	function_expr:  function_name.LEFT_PAREN function_args RIGHT_PAREN 

	LEFT_PAREN  shift 14
	.  error


state 8
	function_name:  identifier.    (51)

	.  reduce 51 (src line 290)


state 9
	identifier:  ID.    (58)

	.  reduce 58 (src line 337)


state 10
	identifier:  QUOTED_STRING.    (59)

	.  reduce 59 (src line 338)


state 11
	identifier:  IDENTIFIER.LEFT_PAREN string_literal RIGHT_PAREN 

	LEFT_PAREN  shift 15
	.  error


state 12
	function_exprs:  function_exprs SEMICOLON.function_expr 

	ID  shift 9
	QUOTED_STRING  shift 10
	IDENTIFIER  shift 11
	.  error

	function_name  goto 7
	identifier  goto 8
	function_expr  goto 16

state 13
	function_exprs:  function_exprs function_expr.    (6)

	.  reduce 6 (src line 99)


state 14
	function_expr:  function_name LEFT_PAREN.function_args RIGHT_PAREN 
	function_args: .    (26)

	ID  shift 9
	LEFT_PAREN  shift 34
	LEFT_BRACKET  shift 20
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  reduce 26 (src line 170)

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	function_args  goto 17
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 19
	function_arg  goto 18
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 15
	identifier:  IDENTIFIER LEFT_PAREN.string_literal RIGHT_PAREN 

	STRING  shift 37
	.  error

	string_literal  goto 45

state 16
	function_exprs:  function_exprs SEMICOLON function_expr.    (5)

	.  reduce 5 (src line 94)


state 17
	function_expr:  function_name LEFT_PAREN function_args.RIGHT_PAREN 
	function_args:  function_args.COMMA function_arg 
	function_args:  function_args.COMMA 

	COMMA  shift 47
	RIGHT_PAREN  shift 46
	.  error


state 18
	function_args:  function_arg.    (25)

	.  reduce 25 (src line 166)


state 19
	function_arg:  expr.    (27)
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	GTE  shift 50
	GT  shift 51
	LT  shift 54
	LTE  shift 55
	MOD  shift 56
	MUL  shift 57
	NEQ  shift 58
	EQ  shift 61
	POW  shift 59
	SUB  shift 60
	AND  shift 52
	OR  shift 53
	.  reduce 27 (src line 177)


state 20
	function_arg:  LEFT_BRACKET.array_list RIGHT_BRACKET 
	array_list: .    (31)

	ID  shift 9
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	.  reduce 31 (src line 197)

	unary_op  goto 36
	identifier  goto 64
	array_elem  goto 63
	array_list  goto 62
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 21
	expr:  array_elem.    (7)

	.  reduce 7 (src line 107)


state 22
	expr:  regex.    (8)

	.  reduce 8 (src line 107)


state 23
	expr:  jpath.    (9)

	.  reduce 9 (src line 107)


state 24
	expr:  paren_expr.    (10)

	.  reduce 10 (src line 107)


state 25
	expr:  function_expr.    (11)

	.  reduce 11 (src line 107)


state 26
	expr:  binary_expr.    (12)

	.  reduce 12 (src line 107)


state 27
	array_elem:  number_literal.    (32)

	.  reduce 32 (src line 203)


state 28
	array_elem:  string_literal.    (33)

	.  reduce 33 (src line 204)


state 29
	array_elem:  columnref.    (34)

	.  reduce 34 (src line 205)


state 30
	array_elem:  nil_literal.    (35)

	.  reduce 35 (src line 206)


state 31
	array_elem:  bool_literal.    (36)

	.  reduce 36 (src line 207)


state 32
	regex:  RE.LEFT_PAREN string_literal RIGHT_PAREN 
	regex:  RE.LEFT_PAREN QUOTED_STRING RIGHT_PAREN 

	LEFT_PAREN  shift 65
	.  error


state 33
	jpath:  JP.LEFT_PAREN string_literal RIGHT_PAREN 
	jpath:  JP.LEFT_PAREN QUOTED_STRING RIGHT_PAREN 

	LEFT_PAREN  shift 66
	.  error


state 34
	paren_expr:  LEFT_PAREN.expr RIGHT_PAREN 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 67
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 35
	number_literal:  NUMBER.    (52)

	.  reduce 52 (src line 297)


state 36
	number_literal:  unary_op.NUMBER 

	NUMBER  shift 68
	.  error


state 37
	string_literal:  STRING.    (16)

	.  reduce 16 (src line 121)


state 38
	columnref:  identifier.    (13)
	function_name:  identifier.    (51)

	LEFT_PAREN  reduce 51 (src line 290)
	.  reduce 13 (src line 110)


state 39
	nil_literal:  NIL.    (17)

	.  reduce 17 (src line 127)


state 40
	nil_literal:  NULL.    (18)

	.  reduce 18 (src line 131)


state 41
	bool_literal:  TRUE.    (19)

	.  reduce 19 (src line 137)


state 42
	bool_literal:  FALSE.    (20)

	.  reduce 20 (src line 141)


state 43
	unary_op:  ADD.    (14)

	.  reduce 14 (src line 117)


state 44
	unary_op:  SUB.    (15)

	.  reduce 15 (src line 118)


state 45
	identifier:  IDENTIFIER LEFT_PAREN string_literal.RIGHT_PAREN 

	RIGHT_PAREN  shift 69
	.  error


state 46
	function_expr:  function_name LEFT_PAREN function_args RIGHT_PAREN.    (22)

	.  reduce 22 (src line 153)


state 47
	function_args:  function_args COMMA.function_arg 
	function_args:  function_args COMMA.    (24)

	ID  shift 9
	LEFT_PAREN  shift 34
	LEFT_BRACKET  shift 20
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  reduce 24 (src line 165)

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 19
	function_arg  goto 70
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 48
	binary_expr:  expr ADD.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 71
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 49
	binary_expr:  expr DIV.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 72
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 50
	binary_expr:  expr GTE.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 73
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 51
	binary_expr:  expr GT.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 74
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 52
	binary_expr:  expr AND.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 75
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 53
	binary_expr:  expr OR.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 76
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 54
	binary_expr:  expr LT.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 77
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 55
	binary_expr:  expr LTE.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 78
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 56
	binary_expr:  expr MOD.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 79
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 57
	binary_expr:  expr MUL.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 80
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 58
	binary_expr:  expr NEQ.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 81
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 59
	binary_expr:  expr POW.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 82
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 60
	binary_expr:  expr SUB.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 83
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 61
	binary_expr:  expr EQ.expr 

	ID  shift 9
	LEFT_PAREN  shift 34
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	RE  shift 32
	JP  shift 33
	.  error

	unary_op  goto 36
	function_name  goto 7
	identifier  goto 38
	array_elem  goto 21
	binary_expr  goto 26
	expr  goto 84
	function_expr  goto 25
	paren_expr  goto 24
	regex  goto 22
	jpath  goto 23
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 62
	function_arg:  LEFT_BRACKET array_list.RIGHT_BRACKET 
	array_list:  array_list.COMMA array_elem 

	COMMA  shift 86
	RIGHT_BRACKET  shift 85
	.  error


state 63
	array_list:  array_elem.    (30)

	.  reduce 30 (src line 193)


state 64
	columnref:  identifier.    (13)

	.  reduce 13 (src line 110)


state 65
	regex:  RE LEFT_PAREN.string_literal RIGHT_PAREN 
	regex:  RE LEFT_PAREN.QUOTED_STRING RIGHT_PAREN 

	STRING  shift 37
	QUOTED_STRING  shift 88
	.  error

	string_literal  goto 87

state 66
	jpath:  JP LEFT_PAREN.string_literal RIGHT_PAREN 
	jpath:  JP LEFT_PAREN.QUOTED_STRING RIGHT_PAREN 

	STRING  shift 37
	QUOTED_STRING  shift 90
	.  error

	string_literal  goto 89

state 67
	paren_expr:  LEFT_PAREN expr.RIGHT_PAREN 
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	RIGHT_PAREN  shift 91
	ADD  shift 48
	DIV  shift 49
	GTE  shift 50
	GT  shift 51
	LT  shift 54
	LTE  shift 55
	MOD  shift 56
	MUL  shift 57
	NEQ  shift 58
	EQ  shift 61
	POW  shift 59
	SUB  shift 60
	AND  shift 52
	OR  shift 53
	.  error


state 68
	number_literal:  unary_op NUMBER.    (53)

	.  reduce 53 (src line 301)


state 69
	identifier:  IDENTIFIER LEFT_PAREN string_literal RIGHT_PAREN.    (60)

	.  reduce 60 (src line 342)


state 70
	function_args:  function_args COMMA function_arg.    (23)

	.  reduce 23 (src line 161)


state 71
	binary_expr:  expr.ADD expr 
	binary_expr:  expr ADD expr.    (37)
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	.  reduce 37 (src line 210)


state 72
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr DIV expr.    (38)
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 59
	.  reduce 38 (src line 214)


state 73
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr GTE expr.    (39)
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	SUB  shift 60
	.  reduce 39 (src line 218)


state 74
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr GT expr.    (40)
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	SUB  shift 60
	.  reduce 40 (src line 224)


state 75
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr AND expr.    (41)
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	GTE  shift 50
	GT  shift 51
	LT  shift 54
	LTE  shift 55
	MOD  shift 56
	MUL  shift 57
	NEQ  shift 58
	EQ  shift 61
	POW  shift 59
	SUB  shift 60
	.  reduce 41 (src line 230)


state 76
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr OR expr.    (42)
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	GTE  shift 50
	GT  shift 51
	LT  shift 54
	LTE  shift 55
	MOD  shift 56
	MUL  shift 57
	NEQ  shift 58
	EQ  shift 61
	POW  shift 59
	SUB  shift 60
	AND  shift 52
	.  reduce 42 (src line 236)


state 77
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr LT expr.    (43)
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	SUB  shift 60
	.  reduce 43 (src line 242)


state 78
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr LTE expr.    (44)
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	SUB  shift 60
	.  reduce 44 (src line 248)


state 79
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr MOD expr.    (45)
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 59
	.  reduce 45 (src line 254)


state 80
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr MUL expr.    (46)
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 59
	.  reduce 46 (src line 259)


state 81
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr NEQ expr.    (47)
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	ADD  shift 48
	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	SUB  shift 60
	.  reduce 47 (src line 264)


state 82
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr POW expr.    (48)
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 

	POW  shift 59
	.  reduce 48 (src line 270)


state 83
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr SUB expr.    (49)
	binary_expr:  expr.EQ expr 

	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	.  reduce 49 (src line 275)


state 84
	binary_expr:  expr.ADD expr 
	binary_expr:  expr.DIV expr 
	binary_expr:  expr.GTE expr 
	binary_expr:  expr.GT expr 
	binary_expr:  expr.AND expr 
	binary_expr:  expr.OR expr 
	binary_expr:  expr.LT expr 
	binary_expr:  expr.LTE expr 
	binary_expr:  expr.MOD expr 
	binary_expr:  expr.MUL expr 
	binary_expr:  expr.NEQ expr 
	binary_expr:  expr.POW expr 
	binary_expr:  expr.SUB expr 
	binary_expr:  expr.EQ expr 
	binary_expr:  expr EQ expr.    (50)

	ADD  shift 48
	DIV  shift 49
	MOD  shift 56
	MUL  shift 57
	POW  shift 59
	SUB  shift 60
	.  reduce 50 (src line 280)


state 85
	function_arg:  LEFT_BRACKET array_list RIGHT_BRACKET.    (28)

	.  reduce 28 (src line 181)


state 86
	array_list:  array_list COMMA.array_elem 

	ID  shift 9
	NUMBER  shift 35
	STRING  shift 37
	QUOTED_STRING  shift 10
	ADD  shift 43
	SUB  shift 44
	TRUE  shift 41
	FALSE  shift 42
	IDENTIFIER  shift 11
	NIL  shift 39
	NULL  shift 40
	.  error

	unary_op  goto 36
	identifier  goto 64
	array_elem  goto 92
	bool_literal  goto 31
	string_literal  goto 28
	nil_literal  goto 30
	number_literal  goto 27
	columnref  goto 29

state 87
	regex:  RE LEFT_PAREN string_literal.RIGHT_PAREN 

	RIGHT_PAREN  shift 93
	.  error


state 88
	regex:  RE LEFT_PAREN QUOTED_STRING.RIGHT_PAREN 

	RIGHT_PAREN  shift 94
	.  error


state 89
	jpath:  JP LEFT_PAREN string_literal.RIGHT_PAREN 

	RIGHT_PAREN  shift 95
	.  error


state 90
	jpath:  JP LEFT_PAREN QUOTED_STRING.RIGHT_PAREN 

	RIGHT_PAREN  shift 96
	.  error


state 91
	paren_expr:  LEFT_PAREN expr RIGHT_PAREN.    (21)

	.  reduce 21 (src line 147)


state 92
	array_list:  array_list COMMA array_elem.    (29)

	.  reduce 29 (src line 187)


state 93
	regex:  RE LEFT_PAREN string_literal RIGHT_PAREN.    (54)

	.  reduce 54 (src line 317)


state 94
	regex:  RE LEFT_PAREN QUOTED_STRING RIGHT_PAREN.    (55)

	.  reduce 55 (src line 321)


state 95
	jpath:  JP LEFT_PAREN string_literal RIGHT_PAREN.    (56)

	.  reduce 56 (src line 327)


state 96
	jpath:  JP LEFT_PAREN QUOTED_STRING RIGHT_PAREN.    (57)

	.  reduce 57 (src line 331)


45 terminals, 21 nonterminals
61 grammar rules, 97/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
70 working sets used
memory: parser 377/120000
10 extra closures
396 shift entries, 2 exceptions
49 goto entries
240 entries saved by goto default
Optimizer space used: output 200/120000
200 table entries, 17 zero
maximum spread: 44, maximum offset: 86
