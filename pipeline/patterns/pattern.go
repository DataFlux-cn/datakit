//此文件由.grok_rule_convert.go文件自动生成，请不要手动修改
//此文件由grok_rule_convert.go文件自动生成，请不要手动修改
//此文件由grok_rule_convert.go文件自动生成，请不要手动修改

package patterns

var GlobalPatterns = map[string][][]string{
	"aws": {
		{"s3_request_line", `(?:%{word:verb} %{notspace:request}(?: HTTP/%{number:httpversion})?|%{data:rawrequest})`},
		{"s3_access_log", `%{word:owner} %{notspace:bucket} \[%{httpdate:timestamp}\] %{ip:clientip} %{notspace:requester} %{notspace:request_id} %{notspace:operation} %{notspace:key} (?:"%{s3_request_line}"|-) (?:%{int:response:int}|-) (?:-|%{notspace:error_code}) (?:%{int:bytes:int}|-) (?:%{int:object_size:int}|-) (?:%{int:request_time_ms:int}|-) (?:%{int:turnaround_time_ms:int}|-) (?:%{qs:referrer}|-) (?:"?%{qs:agent}"?|-) (?:-|%{notspace:version_id})`},
		{"elb_uripathparam", `%{uripath:path}(?:%{uriparam:params})?`},
		{"elb_uri", `%{uriproto:proto}://(?:%{user}(?::[^@]*)?@)?(?:%{urihost:urihost})?(?:%{elb_uripathparam})?`},
		{"elb_request_line", `(?:%{word:verb} %{elb_uri:request}(?: HTTP/%{number:httpversion})?|%{data:rawrequest})`},
		{"elb_access_log", `%{timestamp_iso8601:timestamp} %{notspace:elb} %{ip:clientip}:%{int:clientport:int} (?:(%{ip:backendip}:?:%{int:backendport:int})|-) %{number:request_processing_time:float} %{number:backend_processing_time:float} %{number:response_processing_time:float} %{int:response:int} %{int:backend_response:int} %{int:received_bytes:int} %{int:bytes:int} "%{elb_request_line}"`},
	},

	"bacula": {
		{"bacula_timestamp", `%{monthday}-%{month} %{hour}:%{minute}`},
		{"bacula_host", `[a-zA-Z0-9-]+`},
		{"bacula_volume", `%{user}`},
		{"bacula_device", `%{user}`},
		{"bacula_devicepath", `%{unixpath}`},
		{"bacula_capacity", `%{int}{1,3}(,%{int}{3})*`},
		{"bacula_version", `%{user}`},
		{"bacula_job", `%{user}`},
		{"bacula_log_max_capacity", `User defined maximum volume capacity %{bacula_capacity} exceeded on device \"%{bacula_device:device}\" \(%{bacula_devicepath}\)`},
		{"bacula_log_end_volume", `End of medium on Volume \"%{bacula_volume:volume}\" Bytes=%{bacula_capacity} Blocks=%{bacula_capacity} at %{monthday}-%{month}-%{year} %{hour}:%{minute}.`},
		{"bacula_log_new_volume", `Created new Volume \"%{bacula_volume:volume}\" in catalog.`},
		{"bacula_log_new_label", `Labeled new Volume \"%{bacula_volume:volume}\" on device \"%{bacula_device:device}\" \(%{bacula_devicepath}\).`},
		{"bacula_log_wrote_label", `Wrote label to prelabeled Volume \"%{bacula_volume:volume}\" on device \"%{bacula_device}\" \(%{bacula_devicepath}\)`},
		{"bacula_log_new_mount", `New volume \"%{bacula_volume:volume}\" mounted on device \"%{bacula_device:device}\" \(%{bacula_devicepath}\) at %{monthday}-%{month}-%{year} %{hour}:%{minute}.`},
		{"bacula_log_noopen", `\s+Cannot open %{data}: ERR=%{greedydata:berror}`},
		{"bacula_log_noopendir", `\s+Could not open directory %{data}: ERR=%{greedydata:berror}`},
		{"bacula_log_nostat", `\s+Could not stat %{data}: ERR=%{greedydata:berror}`},
		{"bacula_log_nojobs", `There are no more Jobs associated with Volume \"%{bacula_volume:volume}\". Marking it purged.`},
		{"bacula_log_all_records_pruned", `All records pruned from Volume \"%{bacula_volume:volume}\"; marking it \"Purged\"`},
		{"bacula_log_begin_prune_jobs", `Begin pruning Jobs older than %{int} month %{int} days .`},
		{"bacula_log_begin_prune_files", `Begin pruning Files.`},
		{"bacula_log_pruned_jobs", `Pruned %{int} Jobs* for client %{bacula_host:client} from catalog.`},
		{"bacula_log_pruned_files", `Pruned Files from %{int} Jobs* for client %{bacula_host:client} from catalog.`},
		{"bacula_log_endprune", `End auto prune.`},
		{"bacula_log_startjob", `Start Backup JobId %{int}, Job=%{bacula_job:job}`},
		{"bacula_log_startrestore", `Start Restore Job %{bacula_job:job}`},
		{"bacula_log_usedevice", `Using Device \"%{bacula_device:device}\"`},
		{"bacula_log_diff_fs", `\s+%{unixpath} is a different filesystem. Will not descend from %{unixpath} into it.`},
		{"bacula_log_jobend", `Job write elapsed time = %{data:elapsed}, Transfer rate = %{number} (K|M|G)? Bytes/second`},
		{"bacula_log_noprune_jobs", `No Jobs found to prune.`},
		{"bacula_log_noprune_files", `No Files found to prune.`},
		{"bacula_log_volume_prevwritten", `Volume \"%{bacula_volume:volume}\" previously written, moving to end of data.`},
		{"bacula_log_readyappend", `Ready to append to end of Volume \"%{bacula_volume:volume}\" size=%{int}`},
		{"bacula_log_cancelling", `Cancelling duplicate JobId=%{int}.`},
		{"bacula_log_markcancel", `JobId %{int}, Job %{bacula_job:job} marked to be canceled.`},
		{"bacula_log_client_rbj", `shell command: run ClientRunBeforeJob \"%{greedydata:runjob}\"`},
		{"bacula_log_vss", `(Generate )?VSS (Writer)?`},
		{"bacula_log_maxstart", `Fatal error: Job canceled because max start delay time exceeded.`},
		{"bacula_log_duplicate", `Fatal error: JobId %{int:duplicate} already running. Duplicate job not allowed.`},
		{"bacula_log_nojobstat", `Fatal error: No Job status returned from FD.`},
		{"bacula_log_fatal_conn", `Fatal error: bsock.c:133 Unable to connect to (Client: %{bacula_host:client}|Storage daemon) on %{hostname}:%{posint}. ERR=(?<berror>%{greedydata})`},
		{"bacula_log_no_connect", `Warning: bsock.c:127 Could not connect to (Client: %{bacula_host:client}|Storage daemon) on %{hostname}:%{posint}. ERR=(?<berror>%{greedydata})`},
		{"bacula_log_no_auth", `Fatal error: Unable to authenticate with File daemon at %{hostname}. Possible causes:`},
		{"bacula_log_nosuit", `No prior or suitable Full backup found in catalog. Doing FULL backup.`},
		{"bacula_log_noprior", `No prior Full backup Job record found.`},
		{"bacula_log_job", `(Error: )?Bacula %{bacula_host} %{bacula_version} \(%{bacula_version}\):`},
		{"bacula_logline", `%{bacula_timestamp:bts} %{bacula_host:hostname} JobId %{int:jobid}: (%{bacula_log_max_capacity}|%{bacula_log_end_volume}|%{bacula_log_new_volume}|%{bacula_log_new_label}|%{bacula_log_wrote_label}|%{bacula_log_new_mount}|%{bacula_log_noopen}|%{bacula_log_noopendir}|%{bacula_log_nostat}|%{bacula_log_nojobs}|%{bacula_log_all_records_pruned}|%{bacula_log_begin_prune_jobs}|%{bacula_log_begin_prune_files}|%{bacula_log_pruned_jobs}|%{bacula_log_pruned_files}|%{bacula_log_endprune}|%{bacula_log_startjob}|%{bacula_log_startrestore}|%{bacula_log_usedevice}|%{bacula_log_diff_fs}|%{bacula_log_jobend}|%{bacula_log_noprune_jobs}|%{bacula_log_noprune_files}|%{bacula_log_volume_prevwritten}|%{bacula_log_readyappend}|%{bacula_log_cancelling}|%{bacula_log_markcancel}|%{bacula_log_client_rbj}|%{bacula_log_vss}|%{bacula_log_maxstart}|%{bacula_log_duplicate}|%{bacula_log_nojobstat}|%{bacula_log_fatal_conn}|%{bacula_log_no_connect}|%{bacula_log_no_auth}|%{bacula_log_nosuit}|%{bacula_log_job}|%{bacula_log_noprior})`},
	},

	"bro": {
		{"bro_http", `%{number:ts}\t%{notspace:uid}\t%{ip:orig_h}\t%{int:orig_p}\t%{ip:resp_h}\t%{int:resp_p}\t%{int:trans_depth}\t%{greedydata:method}\t%{greedydata:domain}\t%{greedydata:uri}\t%{greedydata:referrer}\t%{greedydata:user_agent}\t%{number:request_body_len}\t%{number:response_body_len}\t%{greedydata:status_code}\t%{greedydata:status_msg}\t%{greedydata:info_code}\t%{greedydata:info_msg}\t%{greedydata:filename}\t%{greedydata:bro_tags}\t%{greedydata:username}\t%{greedydata:password}\t%{greedydata:proxied}\t%{greedydata:orig_fuids}\t%{greedydata:orig_mime_types}\t%{greedydata:resp_fuids}\t%{greedydata:resp_mime_types}`},
		{"bro_dns", `%{number:ts}\t%{notspace:uid}\t%{ip:orig_h}\t%{int:orig_p}\t%{ip:resp_h}\t%{int:resp_p}\t%{word:proto}\t%{int:trans_id}\t%{greedydata:query}\t%{greedydata:qclass}\t%{greedydata:qclass_name}\t%{greedydata:qtype}\t%{greedydata:qtype_name}\t%{greedydata:rcode}\t%{greedydata:rcode_name}\t%{greedydata:AA}\t%{greedydata:TC}\t%{greedydata:RD}\t%{greedydata:RA}\t%{greedydata:Z}\t%{greedydata:answers}\t%{greedydata:TTLs}\t%{greedydata:rejected}`},
		{"bro_conn", `%{number:ts}\t%{notspace:uid}\t%{ip:orig_h}\t%{int:orig_p}\t%{ip:resp_h}\t%{int:resp_p}\t%{word:proto}\t%{greedydata:service}\t%{number:duration}\t%{number:orig_bytes}\t%{number:resp_bytes}\t%{greedydata:conn_state}\t%{greedydata:local_orig}\t%{greedydata:missed_bytes}\t%{greedydata:history}\t%{greedydata:orig_pkts}\t%{greedydata:orig_ip_bytes}\t%{greedydata:resp_pkts}\t%{greedydata:resp_ip_bytes}\t%{greedydata:tunnel_parents}`},
		{"bro_files", `%{number:ts}\t%{notspace:fuid}\t%{ip:tx_hosts}\t%{ip:rx_hosts}\t%{notspace:conn_uids}\t%{greedydata:source}\t%{greedydata:depth}\t%{greedydata:analyzers}\t%{greedydata:mime_type}\t%{greedydata:filename}\t%{greedydata:duration}\t%{greedydata:local_orig}\t%{greedydata:is_orig}\t%{greedydata:seen_bytes}\t%{greedydata:total_bytes}\t%{greedydata:missing_bytes}\t%{greedydata:overflow_bytes}\t%{greedydata:timedout}\t%{greedydata:parent_fuid}\t%{greedydata:md5}\t%{greedydata:sha1}\t%{greedydata:sha256}\t%{greedydata:extracted}`},
	},

	"exim": {
		{"exim_msgid", `[0-9A-Za-z]{6}-[0-9A-Za-z]{6}-[0-9A-Za-z]{2}`},
		{"exim_flags", `(<=|[-=>*]>|[*]{2}|==)`},
		{"exim_date", `%{year:exim_year}-%{monthnum:exim_month}-%{monthday:exim_day} %{time:exim_time}`},
		{"exim_pid", `\[%{posint}\]`},
		{"exim_qt", `((\d+y)?(\d+w)?(\d+d)?(\d+h)?(\d+m)?(\d+s)?)`},
		{"exim_exclude_terms", `(Message is frozen|(Start|End) queue run| Warning: | retry time not reached | no (IP address|host name) found for (IP address|host) | unexpected disconnection while reading SMTP command | no immediate delivery: |another process is handling this message)`},
		{"exim_remote_host", `(H=(%{notspace:remote_hostname} )?(\(%{notspace:remote_heloname}\) )?\[%{ip:remote_host}\])`},
		{"exim_interface", `(I=\[%{ip:exim_interface}\](:%{number:exim_interface_port}))`},
		{"exim_protocol", `(P=%{notspace:protocol})`},
		{"exim_msg_size", `(S=%{number:exim_msg_size})`},
		{"exim_header_id", `(id=%{notspace:exim_header_id})`},
		{"exim_subject", `(T=%{qs:exim_subject})`},
	},

	"firewalls": {
		{"netscreensessionlog", `%{syslogtimestamp:date} %{iporhost:device} %{iporhost}: NetScreen device_id=%{word:device_id}%{data}: start_time=%{quotedstring:start_time} duration=%{int:duration} policy_id=%{int:policy_id} service=%{data:service} proto=%{int:proto} src zone=%{word:src_zone} dst zone=%{word:dst_zone} action=%{word:action} sent=%{int:sent} rcvd=%{int:rcvd} src=%{iporhost:src_ip} dst=%{iporhost:dst_ip} src_port=%{int:src_port} dst_port=%{int:dst_port} src-xlated ip=%{iporhost:src_xlated_ip} port=%{int:src_xlated_port} dst-xlated ip=%{iporhost:dst_xlated_ip} port=%{int:dst_xlated_port} session_id=%{int:session_id} reason=%{greedydata:reason}`},
		{"cisco_tagged_syslog", `^<%{posint:syslog_pri}>%{ciscotimestamp:timestamp}( %{sysloghost:sysloghost})? ?: %%{ciscotag:ciscotag}:`},
		{"ciscotimestamp", `%{month} +%{monthday}(?: %{year})? %{time}`},
		{"ciscotag", `[A-Z0-9]+-%{int}-(?:[A-Z0-9_]+)`},
		{"cisco_action", `Built|Teardown|Deny|Denied|denied|requested|permitted|denied by ACL|discarded|est-allowed|Dropping|created|deleted`},
		{"cisco_reason", `Duplicate TCP SYN|Failed to locate egress interface|Invalid transport field|No matching connection|DNS Response|DNS Query|(?:%{word}\s*)*`},
		{"cisco_direction", `Inbound|inbound|Outbound|outbound`},
		{"cisco_interval", `first hit|%{int}-second interval`},
		{"cisco_xlate_type", `static|dynamic`},
		{"ciscofw104001", `\((?:Primary|Secondary)\) Switching to ACTIVE - %{greedydata:switch_reason}`},
		{"ciscofw104002", `\((?:Primary|Secondary)\) Switching to STANDBY - %{greedydata:switch_reason}`},
		{"ciscofw104003", `\((?:Primary|Secondary)\) Switching to FAILED\.`},
		{"ciscofw104004", `\((?:Primary|Secondary)\) Switching to OK\.`},
		{"ciscofw105003", `\((?:Primary|Secondary)\) Monitoring on [Ii]nterface %{greedydata:interface_name} waiting`},
		{"ciscofw105004", `\((?:Primary|Secondary)\) Monitoring on [Ii]nterface %{greedydata:interface_name} normal`},
		{"ciscofw105005", `\((?:Primary|Secondary)\) Lost Failover communications with mate on [Ii]nterface %{greedydata:interface_name}`},
		{"ciscofw105008", `\((?:Primary|Secondary)\) Testing [Ii]nterface %{greedydata:interface_name}`},
		{"ciscofw105009", `\((?:Primary|Secondary)\) Testing on [Ii]nterface %{greedydata:interface_name} (?:Passed|Failed)`},
		{"ciscofw106001", `%{cisco_direction:direction} %{word:protocol} connection %{cisco_action:action} from %{ip:src_ip}/%{int:src_port} to %{ip:dst_ip}/%{int:dst_port} flags %{greedydata:tcp_flags} on interface %{greedydata:interface}`},
		{"ciscofw106006_106007_106010", `%{cisco_action:action} %{cisco_direction:direction} %{word:protocol} (?:from|src) %{ip:src_ip}/%{int:src_port}(\(%{data:src_fwuser}\))? (?:to|dst) %{ip:dst_ip}/%{int:dst_port}(\(%{data:dst_fwuser}\))? (?:on interface %{data:interface}|due to %{cisco_reason:reason})`},
		{"ciscofw106014", `%{cisco_action:action} %{cisco_direction:direction} %{word:protocol} src %{data:src_interface}:%{ip:src_ip}(\(%{data:src_fwuser}\))? dst %{data:dst_interface}:%{ip:dst_ip}(\(%{data:dst_fwuser}\))? \(type %{int:icmp_type}, code %{int:icmp_code}\)`},
		{"ciscofw106015", `%{cisco_action:action} %{word:protocol} \(%{data:policy_id}\) from %{ip:src_ip}/%{int:src_port} to %{ip:dst_ip}/%{int:dst_port} flags %{data:tcp_flags}  on interface %{greedydata:interface}`},
		{"ciscofw106021", `%{cisco_action:action} %{word:protocol} reverse path check from %{ip:src_ip} to %{ip:dst_ip} on interface %{greedydata:interface}`},
		{"ciscofw106023", `%{cisco_action:action}( protocol)? %{word:protocol} src %{data:src_interface}:%{data:src_ip}(/%{int:src_port})?(\(%{data:src_fwuser}\))? dst %{data:dst_interface}:%{data:dst_ip}(/%{int:dst_port})?(\(%{data:dst_fwuser}\))?( \(type %{int:icmp_type}, code %{int:icmp_code}\))? by access-group "?%{data:policy_id}"? \[%{data:hashcode1}, %{data:hashcode2}\]`},
		{"ciscofw106100_2_3", `access-list %{notspace:policy_id} %{cisco_action:action} %{word:protocol} for user '%{data:src_fwuser}' %{data:src_interface}/%{ip:src_ip}\(%{int:src_port}\) -> %{data:dst_interface}/%{ip:dst_ip}\(%{int:dst_port}\) hit-cnt %{int:hit_count} %{cisco_interval:interval} \[%{data:hashcode1}, %{data:hashcode2}\]`},
		{"ciscofw106100", `access-list %{notspace:policy_id} %{cisco_action:action} %{word:protocol} %{data:src_interface}/%{ip:src_ip}\(%{int:src_port}\)(\(%{data:src_fwuser}\))? -> %{data:dst_interface}/%{ip:dst_ip}\(%{int:dst_port}\)(\(%{data:src_fwuser}\))? hit-cnt %{int:hit_count} %{cisco_interval:interval} \[%{data:hashcode1}, %{data:hashcode2}\]`},
		{"ciscofw110002", `%{cisco_reason:reason} for %{word:protocol} from %{data:src_interface}:%{ip:src_ip}/%{int:src_port} to %{ip:dst_ip}/%{int:dst_port}`},
		{"ciscofw302010", `%{int:connection_count} in use, %{int:connection_count_max} most used`},
		{"ciscofw302013_302014_302015_302016", `%{cisco_action:action}(?: %{cisco_direction:direction})? %{word:protocol} connection %{int:connection_id} for %{data:src_interface}:%{ip:src_ip}/%{int:src_port}( \(%{ip:src_mapped_ip}/%{int:src_mapped_port}\))?(\(%{data:src_fwuser}\))? to %{data:dst_interface}:%{ip:dst_ip}/%{int:dst_port}( \(%{ip:dst_mapped_ip}/%{int:dst_mapped_port}\))?(\(%{data:dst_fwuser}\))?( duration %{time:duration} bytes %{int:bytes})?(?: %{cisco_reason:reason})?( \(%{data:user}\))?`},
		{"ciscofw302020_302021", `%{cisco_action:action}(?: %{cisco_direction:direction})? %{word:protocol} connection for faddr %{ip:dst_ip}/%{int:icmp_seq_num}(?:\(%{data:fwuser}\))? gaddr %{ip:src_xlated_ip}/%{int:icmp_code_xlated} laddr %{ip:src_ip}/%{int:icmp_code}( \(%{data:user}\))?`},
		{"ciscofw305011", `%{cisco_action:action} %{cisco_xlate_type:xlate_type} %{word:protocol} translation from %{data:src_interface}:%{ip:src_ip}(/%{int:src_port})?(\(%{data:src_fwuser}\))? to %{data:src_xlated_interface}:%{ip:src_xlated_ip}/%{data:src_xlated_port}`},
		{"ciscofw313001_313004_313008", `%{cisco_action:action} %{word:protocol} type=%{int:icmp_type}, code=%{int:icmp_code} from %{ip:src_ip} on interface %{data:interface}( to %{ip:dst_ip})?`},
		{"ciscofw313005", `%{cisco_reason:reason} for %{word:protocol} error message: %{word:err_protocol} src %{data:err_src_interface}:%{ip:err_src_ip}(\(%{data:err_src_fwuser}\))? dst %{data:err_dst_interface}:%{ip:err_dst_ip}(\(%{data:err_dst_fwuser}\))? \(type %{int:err_icmp_type}, code %{int:err_icmp_code}\) on %{data:interface} interface\.  Original ip payload: %{word:protocol} src %{ip:orig_src_ip}/%{int:orig_src_port}(\(%{data:orig_src_fwuser}\))? dst %{ip:orig_dst_ip}/%{int:orig_dst_port}(\(%{data:orig_dst_fwuser}\))?`},
		{"ciscofw321001", `Resource '%{word:resource_name}' limit of %{posint:resource_limit} reached for system`},
		{"ciscofw402117", `%{word:protocol}: Received a non-ipSec packet \(protocol= %{word:orig_protocol}\) from %{ip:src_ip} to %{ip:dst_ip}`},
		{"ciscofw402119", `%{word:protocol}: Received an %{word:orig_protocol} packet \(SPI= %{data:spi}, sequence number= %{data:seq_num}\) from %{ip:src_ip} \(user= %{data:user}\) to %{ip:dst_ip} that failed anti-replay checking`},
		{"ciscofw419001", `%{cisco_action:action} %{word:protocol} packet from %{data:src_interface}:%{ip:src_ip}/%{int:src_port} to %{data:dst_interface}:%{ip:dst_ip}/%{int:dst_port}, reason: %{greedydata:reason}`},
		{"ciscofw419002", `%{cisco_reason:reason} from %{data:src_interface}:%{ip:src_ip}/%{int:src_port} to %{data:dst_interface}:%{ip:dst_ip}/%{int:dst_port} with different initial sequence number`},
		{"ciscofw500004", `%{cisco_reason:reason} for protocol=%{word:protocol}, from %{ip:src_ip}/%{int:src_port} to %{ip:dst_ip}/%{int:dst_port}`},
		{"ciscofw602303_602304", `%{word:protocol}: An %{cisco_direction:direction} %{greedydata:tunnel_type} SA \(SPI= %{data:spi}\) between %{ip:src_ip} and %{ip:dst_ip} \(user= %{data:user}\) has been %{cisco_action:action}`},
		{"ciscofw710001_710002_710003_710005_710006", `%{word:protocol} (?:request|access) %{cisco_action:action} from %{ip:src_ip}/%{int:src_port} to %{data:dst_interface}:%{ip:dst_ip}/%{int:dst_port}`},
		{"ciscofw713172", `Group = %{greedydata:group}, ip = %{ip:src_ip}, Automatic NAT Detection Status:\s+Remote end\s*%{data:is_remote_natted}\s*behind a NAT device\s+This\s+end\s*%{data:is_local_natted}\s*behind a NAT device`},
		{"ciscofw733100", `\[\s*%{data:drop_type}\s*\] drop %{data:drop_rate_id} exceeded. Current burst rate is %{int:drop_rate_current_burst} per second, max configured rate is %{int:drop_rate_max_burst}; Current average rate is %{int:drop_rate_current_avg} per second, max configured rate is %{int:drop_rate_max_avg}; Cumulative total count is %{int:drop_total_count}`},
		{"shorewall", `(%{syslogtimestamp:timestamp}) (%{word:nf_host}) kernel:.*Shorewall:(%{word:nf_action1})?:(%{word:nf_action2})?.*IN=(%{username:nf_in_interface})?.*(OUT= *MAC=(%{commonmac:nf_dst_mac}):(%{commonmac:nf_src_mac})?|OUT=%{username:nf_out_interface}).*SRC=(%{ipv4:nf_src_ip}).*DST=(%{ipv4:nf_dst_ip}).*LEN=(%{word:nf_len}).?*TOS=(%{word:nf_tos}).?*PREC=(%{word:nf_prec}).?*TTL=(%{int:nf_ttl}).?*ID=(%{int:nf_id}).?*PROTO=(%{word:nf_protocol}).?*SPT=(%{int:nf_src_port}?.*DPT=%{int:nf_dst_port}?.*)`},
	},

	"grok-patterns": {
		{"username", `[a-zA-Z0-9._-]+`},
		{"user", `%{username}`},
		{"int", `(?:[+-]?(?:[0-9]+))`},
		{"base10num", `([+-]?(?:[0-9]+(?:\.[0-9]+)?)|\.[0-9]+)`},
		{"number", `(?:%{base10num})`},
		{"base16num", `(0[xX]?[0-9a-fA-F]+)`},
		{"posint", `\b(?:[1-9][0-9]*)\b`},
		{"nonnegint", `\b(?:[0-9]+)\b`},
		{"word", `\b\w+\b`},
		{"notspace", `\S+`},
		{"space", `\s*`},
		{"data", `.*?`},
		{"greedydata", `.*`},
		{"quotedstring", `"([^"\\]*(\\.[^"\\]*)*)"|\'([^\'\\]*(\\.[^\'\\]*)*)\'`},
		{"uuid", `[A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}`},
		{"mac", `(?:%{ciscomac}|%{windowsmac}|%{commonmac})`},
		{"ciscomac", `(?:(?:[A-Fa-f0-9]{4}\.){2}[A-Fa-f0-9]{4})`},
		{"windowsmac", `(?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})`},
		{"commonmac", `(?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})`},
		{"ipv6", `((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?`},
		{"ipv4", `(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)`},
		{"ip", `(?:%{ipv6}|%{ipv4})`},
		{"hostname", `\b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)`},
		{"host", `%{hostname}`},
		{"iporhost", `(?:%{hostname}|%{ip})`},
		{"hostport", `%{iporhost}:%{posint}`},
		{"path", `(?:%{unixpath}|%{winpath})`},
		{"unixpath", `(/[\w_%!$@:.,-]?/?)(\S+)?`},
		{"tty", `(?:/dev/(pts|tty([pq])?)(\w+)?/?(?:[0-9]+))`},
		{"winpath", `([A-Za-z]:|\\)(?:\\[^\\?*]*)+`},
		{"uriproto", `[A-Za-z]+(\+[A-Za-z+]+)?`},
		{"urihost", `%{iporhost}(?::%{posint:port})?`},
		{"uripath", `(?:/[A-Za-z0-9$.+!*'(){},~:;=@#%_\-]*)+`},
		{"uriparam", `\?[A-Za-z0-9$.+!*'|(){},~@#%&/=:;_?\-\[\]]*`},
		{"uripathparam", `%{uripath}(?:%{uriparam})?`},
		{"uri", `%{uriproto}://(?:%{user}(?::[^@]*)?@)?(?:%{urihost})?(?:%{uripathparam})?`},
		{"month", `\b(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\b`},
		{"monthnum", `(?:0?[1-9]|1[0-2])`},
		{"monthday", `(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])`},
		{"day", `(?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)`},
		{"year", `(\d\d){1,2}`},
		{"hour", `(?:2[0123]|[01]?[0-9])`},
		{"minute", `(?:[0-5][0-9])`},
		{"second", `(?:(?:[0-5][0-9]|60)(?:[:.,][0-9]+)?)`},
		{"time", `([^0-9]?)%{hour}:%{minute}(?::%{second})([^0-9]?)`},
		{"date_us", `%{monthnum}[/-]%{monthday}[/-]%{year}`},
		{"date_eu", `%{monthday}[./-]%{monthnum}[./-]%{year}`},
		{"iso8601_timezone", `(?:Z|[+-]%{hour}(?::?%{minute}))`},
		{"iso8601_second", `(?:%{second}|60)`},
		{"timestamp_iso8601", `%{year}-%{monthnum}-%{monthday}[T ]%{hour}:?%{minute}(?::?%{second})?%{iso8601_timezone}?`},
		{"date", `%{date_us}|%{date_eu}`},
		{"datestamp", `%{date}[- ]%{time}`},
		{"tz", `(?:[PMCE][SD]T|UTC|GMT)`},
		{"datestamp_rfc822", `%{day} %{month} %{monthday} %{year} %{time} %{tz}`},
		{"datestamp_other", `%{day} %{month} %{monthday} %{time} %{tz} %{year}`},
		{"syslogtimestamp", `%{month} +%{monthday} %{time}`},
		{"prog", `(?:[\w._/%-]+)`},
		{"syslogprog", `%{prog:program}(?:\[%{posint:pid}\])?`},
		{"sysloghost", `%{iporhost}`},
		{"syslogfacility", `<%{nonnegint:facility}.%{nonnegint:priority}>`},
		{"httpdate", `%{monthday}/%{month}/%{year}:%{time} %{int}`},
		{"qs", `%{quotedstring}`},
		{"syslogbase", `%{syslogtimestamp:timestamp} (?:%{syslogfacility} )?%{sysloghost:logsource} %{syslogprog}:`},
		{"commonapachelog", `%{iporhost:clientip} %{user:ident} %{user:auth} \[%{httpdate:timestamp}\] "(?:%{word:verb} %{notspace:request}(?: HTTP/%{number:httpversion})?|%{data:rawrequest})" %{number:response} (?:%{number:bytes}|-)`},
		{"combinedapachelog", `%{commonapachelog} %{qs:referrer} %{qs:agent}`},
		{"loglevel", `([A-a]lert|ALERT|[T|t]race|TRACE|[D|d]ebug|DEBUG|[N|n]otice|NOTICE|[I|i]nfo|INFO|[W|w]arn?(?:ing)?|WARN?(?:ING)?|[E|e]rr?(?:or)?|ERR?(?:OR)?|[C|c]rit?(?:ical)?|CRIT?(?:ICAL)?|[F|f]atal|FATAL|[S|s]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)`},
	},

	"haproxy": {
		{"haproxytime", `(?!<[0-9])%{hour:haproxy_hour}:%{minute:haproxy_minute}(?::%{second:haproxy_second})(?![0-9])`},
		{"haproxydate", `%{monthday:haproxy_monthday}/%{month:haproxy_month}/%{year:haproxy_year}:%{haproxytime:haproxy_time}.%{int:haproxy_milliseconds}`},
		{"haproxycapturedrequestheaders", `%{data:captured_request_headers}`},
		{"haproxycapturedresponseheaders", `%{data:captured_response_headers}`},
		{"haproxyhttpbase", `%{ip:client_ip}:%{int:client_port} \[%{haproxydate:accept_date}\] %{notspace:frontend_name} %{notspace:backend_name}/%{notspace:server_name} %{int:time_request}/%{int:time_queue}/%{int:time_backend_connect}/%{int:time_backend_response}/%{notspace:time_duration} %{int:http_status_code} %{notspace:bytes_read} %{data:captured_request_cookie} %{data:captured_response_cookie} %{notspace:termination_state} %{int:actconn}/%{int:feconn}/%{int:beconn}/%{int:srvconn}/%{notspace:retries} %{int:srv_queue}/%{int:backend_queue} (\{%{haproxycapturedrequestheaders}\})?( )?(\{%{haproxycapturedresponseheaders}\})?( )?"(<BADREQ>|(%{word:http_verb} (%{uriproto:http_proto}://)?(?:%{user:http_user}(?::[^@]*)?@)?(?:%{urihost:http_host})?(?:%{uripathparam:http_request})?( HTTP/%{number:http_version})?))?"`},
		{"haproxyhttp", `(?:%{syslogtimestamp:syslog_timestamp}|%{timestamp_iso8601:timestamp8601}) %{iporhost:syslog_server} %{syslogprog}: %{haproxyhttpbase}`},
		{"haproxytcp", `(?:%{syslogtimestamp:syslog_timestamp}|%{timestamp_iso8601:timestamp8601}) %{iporhost:syslog_server} %{syslogprog}: %{ip:client_ip}:%{int:client_port} \[%{haproxydate:accept_date}\] %{notspace:frontend_name} %{notspace:backend_name}/%{notspace:server_name} %{int:time_queue}/%{int:time_backend_connect}/%{notspace:time_duration} %{notspace:bytes_read} %{notspace:termination_state} %{int:actconn}/%{int:feconn}/%{int:beconn}/%{int:srvconn}/%{notspace:retries} %{int:srv_queue}/%{int:backend_queue}`},
	},

	"java": {
		{"javaclass", `(?:[a-zA-Z$_][a-zA-Z$_0-9]*\.)*[a-zA-Z$_][a-zA-Z$_0-9]*`},
		{"javafile", `(?:[A-Za-z0-9_. -]+)`},
		{"javamethod", `(?:(<init>)|[a-zA-Z$_][a-zA-Z$_0-9]*)`},
		{"javastacktracepart", `%{space}at %{javaclass:class}\.%{javamethod:method}\(%{javafile:file}(?::%{number:line})?\)`},
		{"javathread", `(?:[A-Z]{2}-Processor[\d]+)`},
		{"javaclass", `(?:[a-zA-Z0-9-]+\.)+[A-Za-z0-9$]+`},
		{"javafile", `(?:[A-Za-z0-9_.-]+)`},
		{"javastacktracepart", `at %{javaclass:class}\.%{word:method}\(%{javafile:file}:%{number:line}\)`},
		{"javalogmessage", `(.*)`},
		{"catalina_datestamp", `%{month} %{monthday}, 20%{year} %{hour}:?%{minute}(?::?%{second}) (?:AM|PM)`},
		{"tomcat_datestamp", `20%{year}-%{monthnum}-%{monthday} %{hour}:?%{minute}(?::?%{second}) %{iso8601_timezone}`},
		{"catalinalog", `%{catalina_datestamp:timestamp} %{javaclass:class} %{javalogmessage:logmessage}`},
		{"tomcatlog", `%{tomcat_datestamp:timestamp} \| %{loglevel:level} \| %{javaclass:class} - %{javalogmessage:logmessage}`},
	},

	"junos": {
		{"rt_flow_event", `(RT_FLOW_SESSION_CREATE|RT_FLOW_SESSION_CLOSE|RT_FLOW_SESSION_DENY)`},
		{"rt_flow1", `%{rt_flow_event:event}: %{GREEDYdata:close-reason}: %{IP:src-ip}/%{INT:src-port}->%{IP:dst-ip}/%{INT:dst-port} %{data:service} %{IP:nat-src-ip}/%{INT:nat-src-port}->%{IP:nat-dst-ip}/%{INT:nat-dst-port} %{data:src-nat-rule-name} %{data:dst-nat-rule-name} %{INT:protocol-id} %{data:policy-name} %{data:from-zone} %{data:to-zone} %{INT:session-id} \d+\(%{data:sent}\) \d+\(%{data:received}\) %{INT:elapsed-time} .*`},
		{"rt_flow2", `%{rt_flow_event:event}: session created %{IP:src-ip}/%{INT:src-port}->%{IP:dst-ip}/%{INT:dst-port} %{data:service} %{IP:nat-src-ip}/%{INT:nat-src-port}->%{IP:nat-dst-ip}/%{INT:nat-dst-port} %{data:src-nat-rule-name} %{data:dst-nat-rule-name} %{INT:protocol-id} %{data:policy-name} %{data:from-zone} %{data:to-zone} %{INT:session-id} .*`},
		{"rt_flow3", `%{rt_flow_event:event}: session denied %{IP:src-ip}/%{INT:src-port}->%{IP:dst-ip}/%{INT:dst-port} %{data:service} %{INT:protocol-id}\(\d\) %{data:policy-name} %{data:from-zone} %{data:to-zone} .*`},
	},

	"linux-syslog": {
		{"syslog5424printascii", `[!-~]+`},
		{"syslogbase2", `(?:%{syslogtimestamp:timestamp}|%{timestamp_iso8601:timestamp8601}) (?:%{syslogfacility} )?%{sysloghost:logsource}+(?: %{syslogprog}:|)`},
		{"syslogpamsession", `%{syslogbase} (?=%{greedydata:message})%{word:pam_module}\(%{data:pam_caller}\): session %{word:pam_session_state} for user %{username:username}(?: by %{greedydata:pam_by})?`},
		{"cron_action", `[A-Z ]+`},
		{"cronlog", `%{syslogbase} \(%{user:user}\) %{cron_action:action} \(%{data:message}\)`},
		{"syslogline", `%{syslogbase2} %{greedydata:message}`},
		{"syslog5424pri", `<%{nonnegint:syslog5424_pri}>`},
		{"syslog5424sd", `\[%{data}\]+`},
		{"syslog5424base", `%{syslog5424pri}%{nonnegint:syslog5424_ver} +(?:%{timestamp_iso8601:syslog5424_ts}|-) +(?:%{hostname:syslog5424_host}|-) +(-|%{syslog5424printascii:syslog5424_app}) +(-|%{syslog5424printascii:syslog5424_proc}) +(-|%{syslog5424printascii:syslog5424_msgid}) +(?:%{syslog5424sd:syslog5424_sd}|-|)`},
		{"syslog5424line", `%{syslog5424base} +%{greedydata:syslog5424_msg}`},
	},

	"mcollective": {
		{"mcollectiveaudit", `%{timestamp_iso8601:timestamp}:`},
	},

	"mcollective-patterns": {
		{"mcollective", `., \[%{timestamp_iso8601:timestamp} #%{posint:pid}\]%{space}%{loglevel:event_level}`},
		{"mcollectiveaudit", `%{timestamp_iso8601:timestamp}:`},
	},

	"mongodb": {
		{"mongo_log", `%{syslogtimestamp:timestamp} \[%{word:component}\] %{greedydata:message}`},
		{"mongo_query", `\{ (?<={ ).*(?= } ntoreturn:) \}`},
		{"mongo_slowquery", `%{word} %{mongo_worddash:database}\.%{mongo_worddash:collection} %{word}: %{mongo_query:query} %{word}:%{nonnegint:ntoreturn} %{word}:%{nonnegint:ntoskip} %{word}:%{nonnegint:nscanned}.*nreturned:%{nonnegint:nreturned}..+ (?<duration>[0-9]+)ms`},
		{"mongo_worddash", `\b[\w-]+\b`},
		{"mongo3_severity", `\w`},
		{"mongo3_component", `%{word}|-`},
		{"mongo3_log", `%{timestamp_iso8601:timestamp} %{mongo3_severity:severity} %{mongo3_component:component}%{space}(?:\[%{data:context}\])? %{greedydata:message}`},
	},

	"nagios": {
		{"nagiostime", `\[%{number:nagios_epoch}\]`},
		{"nagios_type_current_service_state", `CURRENT SERVICE STATE`},
		{"nagios_type_current_host_state", `CURRENT HOST STATE`},
		{"nagios_type_service_notification", `SERVICE NOTIFICATION`},
		{"nagios_type_host_notification", `HOST NOTIFICATION`},
		{"nagios_type_service_alert", `SERVICE ALERT`},
		{"nagios_type_host_alert", `HOST ALERT`},
		{"nagios_type_service_flapping_alert", `SERVICE FLAPPING ALERT`},
		{"nagios_type_host_flapping_alert", `HOST FLAPPING ALERT`},
		{"nagios_type_service_downtime_alert", `SERVICE DOWNTIME ALERT`},
		{"nagios_type_host_downtime_alert", `HOST DOWNTIME ALERT`},
		{"nagios_type_passive_service_check", `PASSIVE SERVICE CHECK`},
		{"nagios_type_passive_host_check", `PASSIVE HOST CHECK`},
		{"nagios_type_service_event_handler", `SERVICE EVENT HANDLER`},
		{"nagios_type_host_event_handler", `HOST EVENT HANDLER`},
		{"nagios_type_external_command", `EXTERNAL COMMAND`},
		{"nagios_type_timeperiod_transition", `TIMEPERIOD TRANSITION`},
		{"nagios_ec_disable_svc_check", `DISABLE_SVC_CHECK`},
		{"nagios_ec_enable_svc_check", `ENABLE_SVC_CHECK`},
		{"nagios_ec_disable_host_check", `DISABLE_HOST_CHECK`},
		{"nagios_ec_enable_host_check", `ENABLE_HOST_CHECK`},
		{"nagios_ec_process_service_check_result", `PROCESS_SERVICE_CHECK_RESULT`},
		{"nagios_ec_process_host_check_result", `PROCESS_HOST_CHECK_RESULT`},
		{"nagios_ec_schedule_service_downtime", `SCHEDULE_SERVICE_DOWNTIME`},
		{"nagios_ec_schedule_host_downtime", `SCHEDULE_HOST_DOWNTIME`},
		{"nagios_ec_disable_host_svc_notifications", `DISABLE_HOST_SVC_NOTIFICATIONS`},
		{"nagios_ec_enable_host_svc_notifications", `ENABLE_HOST_SVC_NOTIFICATIONS`},
		{"nagios_ec_disable_host_notifications", `DISABLE_HOST_NOTIFICATIONS`},
		{"nagios_ec_enable_host_notifications", `ENABLE_HOST_NOTIFICATIONS`},
		{"nagios_ec_disable_svc_notifications", `DISABLE_SVC_NOTIFICATIONS`},
		{"nagios_ec_enable_svc_notifications", `ENABLE_SVC_NOTIFICATIONS`},
		{"nagios_warning", `Warning:%{space}%{greedydata:nagios_message}`},
		{"nagios_current_service_state", `%{nagios_type_current_service_state:nagios_type}: %{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{data:nagios_statetype};%{data:nagios_statecode};%{greedydata:nagios_message}`},
		{"nagios_current_host_state", `%{nagios_type_current_host_state:nagios_type}: %{data:nagios_hostname};%{data:nagios_state};%{data:nagios_statetype};%{data:nagios_statecode};%{greedydata:nagios_message}`},
		{"nagios_service_notification", `%{nagios_type_service_notification:nagios_type}: %{data:nagios_notifyname};%{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{data:nagios_contact};%{greedydata:nagios_message}`},
		{"nagios_host_notification", `%{nagios_type_host_notification:nagios_type}: %{data:nagios_notifyname};%{data:nagios_hostname};%{data:nagios_state};%{data:nagios_contact};%{greedydata:nagios_message}`},
		{"nagios_service_alert", `%{nagios_type_service_alert:nagios_type}: %{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{data:nagios_statelevel};%{number:nagios_attempt};%{greedydata:nagios_message}`},
		{"nagios_host_alert", `%{nagios_type_host_alert:nagios_type}: %{data:nagios_hostname};%{data:nagios_state};%{data:nagios_statelevel};%{number:nagios_attempt};%{greedydata:nagios_message}`},
		{"nagios_service_flapping_alert", `%{nagios_type_service_flapping_alert:nagios_type}: %{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{greedydata:nagios_message}`},
		{"nagios_host_flapping_alert", `%{nagios_type_host_flapping_alert:nagios_type}: %{data:nagios_hostname};%{data:nagios_state};%{greedydata:nagios_message}`},
		{"nagios_service_downtime_alert", `%{nagios_type_service_downtime_alert:nagios_type}: %{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{greedydata:nagios_comment}`},
		{"nagios_host_downtime_alert", `%{nagios_type_host_downtime_alert:nagios_type}: %{data:nagios_hostname};%{data:nagios_state};%{greedydata:nagios_comment}`},
		{"nagios_passive_service_check", `%{nagios_type_passive_service_check:nagios_type}: %{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{greedydata:nagios_comment}`},
		{"nagios_passive_host_check", `%{nagios_type_passive_host_check:nagios_type}: %{data:nagios_hostname};%{data:nagios_state};%{greedydata:nagios_comment}`},
		{"nagios_service_event_handler", `%{nagios_type_service_event_handler:nagios_type}: %{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{data:nagios_statelevel};%{data:nagios_event_handler_name}`},
		{"nagios_host_event_handler", `%{nagios_type_host_event_handler:nagios_type}: %{data:nagios_hostname};%{data:nagios_state};%{data:nagios_statelevel};%{data:nagios_event_handler_name}`},
		{"nagios_timeperiod_transition", `%{nagios_type_timeperiod_transition:nagios_type}: %{data:nagios_service};%{data:nagios_unknown1};%{data:nagios_unknown2}`},
		{"nagios_ec_line_disable_svc_check", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_disable_svc_check:nagios_command};%{data:nagios_hostname};%{data:nagios_service}`},
		{"nagios_ec_line_disable_host_check", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_disable_host_check:nagios_command};%{data:nagios_hostname}`},
		{"nagios_ec_line_enable_svc_check", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_enable_svc_check:nagios_command};%{data:nagios_hostname};%{data:nagios_service}`},
		{"nagios_ec_line_enable_host_check", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_enable_host_check:nagios_command};%{data:nagios_hostname}`},
		{"nagios_ec_line_process_service_check_result", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_process_service_check_result:nagios_command};%{data:nagios_hostname};%{data:nagios_service};%{data:nagios_state};%{greedydata:nagios_check_result}`},
		{"nagios_ec_line_process_host_check_result", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_process_host_check_result:nagios_command};%{data:nagios_hostname};%{data:nagios_state};%{greedydata:nagios_check_result}`},
		{"nagios_ec_line_disable_host_svc_notifications", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_disable_host_svc_notifications:nagios_command};%{greedydata:nagios_hostname}`},
		{"nagios_ec_line_disable_host_notifications", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_disable_host_notifications:nagios_command};%{greedydata:nagios_hostname}`},
		{"nagios_ec_line_disable_svc_notifications", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_disable_svc_notifications:nagios_command};%{data:nagios_hostname};%{greedydata:nagios_service}`},
		{"nagios_ec_line_enable_host_svc_notifications", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_enable_host_svc_notifications:nagios_command};%{greedydata:nagios_hostname}`},
		{"nagios_ec_line_enable_host_notifications", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_enable_host_notifications:nagios_command};%{greedydata:nagios_hostname}`},
		{"nagios_ec_line_enable_svc_notifications", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_enable_svc_notifications:nagios_command};%{data:nagios_hostname};%{greedydata:nagios_service}`},
		{"nagios_ec_line_schedule_host_downtime", `%{nagios_type_external_command:nagios_type}: %{nagios_ec_schedule_host_downtime:nagios_command};%{data:nagios_hostname};%{number:nagios_start_time};%{number:nagios_end_time};%{number:nagios_fixed};%{number:nagios_trigger_id};%{number:nagios_duration};%{data:author};%{data:comment}`},
		{"nagioslogline", `%{nagiostime} (?:%{nagios_warning}|%{nagios_current_service_state}|%{nagios_current_host_state}|%{nagios_service_notification}|%{nagios_host_notification}|%{nagios_service_alert}|%{nagios_host_alert}|%{nagios_service_flapping_alert}|%{nagios_host_flapping_alert}|%{nagios_service_downtime_alert}|%{nagios_host_downtime_alert}|%{nagios_passive_service_check}|%{nagios_passive_host_check}|%{nagios_service_event_handler}|%{nagios_host_event_handler}|%{nagios_timeperiod_transition}|%{nagios_ec_line_disable_svc_check}|%{nagios_ec_line_enable_svc_check}|%{nagios_ec_line_disable_host_check}|%{nagios_ec_line_enable_host_check}|%{nagios_ec_line_process_host_check_result}|%{nagios_ec_line_process_service_check_result}|%{nagios_ec_line_schedule_host_downtime}|%{nagios_ec_line_disable_host_svc_notifications}|%{nagios_ec_line_enable_host_svc_notifications}|%{nagios_ec_line_disable_host_notifications}|%{nagios_ec_line_enable_host_notifications}|%{nagios_ec_line_disable_svc_notifications}|%{nagios_ec_line_enable_svc_notifications})`},
	},

	"postgresql": {
		{"postgresql", `%{datestamp:timestamp} %{tz} %{data:user_id} %{greedydata:connection_id} %{posint:pid}`},
	},

	"rails": {
		{"ruuid", `\h{32}`},
		{"rcontroller", `(?<controller>[^#]+)#(?<action>\w+)`},
		{"rails3head", `(?m)Started %{word:verb} "%{uripathparam:request}" for %{iporhost:clientip} at (?<timestamp>%{year}-%{monthnum}-%{monthday} %{hour}:%{minute}:%{second} %{iso8601_timezone})`},
		{"rprocessing", `\W*Processing by %{rcontroller} as (?<format>\S+)(?:\W*Parameters: {%{data:params}}\W*)?`},
		{"rails3foot", `Completed %{number:response}%{data} in %{number:totalms}ms %{rails3profile}%{greedydata}`},
		{"rails3profile", `(?:\(Views: %{number:viewms}ms \| ActiveRecord: %{number:activerecordms}ms|\(ActiveRecord: %{number:activerecordms}ms)?`},
		{"rails3", `%{rails3head}(?:%{rprocessing})?(?<context>(?:%{data}\n)*)(?:%{rails3foot})?`},
	},

	"redis": {
		{"redistimestamp", `%{monthday} %{month} %{time}`},
		{"redislog", `\[%{posint:pid}\] %{redistimestamp:timestamp} \*`},
	},

	"ruby": {
		{"ruby_loglevel", `(?:DEBUG|FATAL|ERROR|WARN|INFO)`},
		{"ruby_logger", `[DFEWI], \[%{timestamp_iso8601:timestamp} #%{posint:pid}\] *%{ruby_loglevel:loglevel} -- +%{data:progname}: %{greedydata:message}`},
	},
}
