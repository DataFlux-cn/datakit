// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dk.proto

/*
Package io is a generated protocol buffer package.

It is generated from these files:
	dk.proto

It has these top-level messages:
	Response
	Request
*/
package io

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	Err     string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Points  int64  `protobuf:"varint,2,opt,name=points" json:"points,omitempty"`
	Objects int64  `protobuf:"varint,3,opt,name=objects" json:"objects,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *Response) GetPoints() int64 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *Response) GetObjects() int64 {
	if m != nil {
		return m.Objects
	}
	return 0
}

type Request struct {
	Lines     []byte `protobuf:"bytes,1,opt,name=Lines,json=lines,proto3" json:"Lines,omitempty"`
	Objects   []byte `protobuf:"bytes,2,opt,name=Objects,json=objects,proto3" json:"Objects,omitempty"`
	Precision string `protobuf:"bytes,3,opt,name=Precision,json=precision" json:"Precision,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=Name,json=name" json:"Name,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetLines() []byte {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *Request) GetObjects() []byte {
	if m != nil {
		return m.Objects
	}
	return nil
}

func (m *Request) GetPrecision() string {
	if m != nil {
		return m.Precision
	}
	return ""
}

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Response)(nil), "io.Response")
	proto.RegisterType((*Request)(nil), "io.Request")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataKit service

type DataKitClient interface {
	Send(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type dataKitClient struct {
	cc *grpc.ClientConn
}

func NewDataKitClient(cc *grpc.ClientConn) DataKitClient {
	return &dataKitClient{cc}
}

func (c *dataKitClient) Send(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/io.DataKit/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataKit service

type DataKitServer interface {
	Send(context.Context, *Request) (*Response, error)
}

func RegisterDataKitServer(s *grpc.Server, srv DataKitServer) {
	s.RegisterService(&_DataKit_serviceDesc, srv)
}

func _DataKit_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataKitServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.DataKit/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataKitServer).Send(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataKit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.DataKit",
	HandlerType: (*DataKitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _DataKit_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dk.proto",
}

func init() { proto.RegisterFile("dk.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0xe2, 0x36, 0xcd, 0xd1, 0x01, 0x9d, 0x10, 0xb2, 0x10, 0x43, 0x15, 0x96, 0x4e,
	0x1e, 0xe0, 0x1f, 0x20, 0x36, 0x50, 0x41, 0x66, 0x63, 0x73, 0xdb, 0x1b, 0x8e, 0x52, 0x9f, 0xb1,
	0xcd, 0xff, 0xaf, 0xe2, 0x24, 0xdb, 0x7d, 0xef, 0xe9, 0x3d, 0xdd, 0x83, 0xd5, 0xf1, 0x64, 0x42,
	0x94, 0x2c, 0x58, 0xb3, 0xf4, 0x3b, 0x58, 0x59, 0x4a, 0x41, 0x7c, 0x22, 0xbc, 0x81, 0x86, 0x62,
	0xd4, 0xd5, 0xa6, 0xda, 0x76, 0x76, 0x38, 0xf1, 0x0e, 0x96, 0x41, 0xd8, 0xe7, 0xa4, 0xeb, 0x4d,
	0xb5, 0x6d, 0xec, 0x44, 0xa8, 0xa1, 0x95, 0xfd, 0x0f, 0x1d, 0x72, 0xd2, 0x4d, 0x31, 0x66, 0xec,
	0x4f, 0xd0, 0x5a, 0xfa, 0xfb, 0xa7, 0x94, 0xf1, 0x16, 0x16, 0xef, 0xec, 0x29, 0x95, 0xc2, 0xb5,
	0x5d, 0xfc, 0x0e, 0x30, 0x44, 0x3f, 0xa6, 0x68, 0x5d, 0xf4, 0x39, 0x8a, 0x0f, 0xd0, 0x7d, 0x46,
	0x3a, 0x70, 0x62, 0xf1, 0xa5, 0xb6, 0xb3, 0x5d, 0x98, 0x05, 0x44, 0x50, 0x3b, 0x77, 0x26, 0xad,
	0x8a, 0xa1, 0xbc, 0x3b, 0xd3, 0x93, 0x81, 0xf6, 0xd5, 0x65, 0xf7, 0xc6, 0x19, 0x1f, 0x41, 0x7d,
	0x91, 0x3f, 0xe2, 0xb5, 0x61, 0x31, 0xd3, 0x07, 0xf7, 0xeb, 0x11, 0xc6, 0x79, 0xfd, 0xd5, 0x8b,
	0xfa, 0xae, 0x59, 0xf6, 0xcb, 0xb2, 0xfe, 0xf9, 0x12, 0x00, 0x00, 0xff, 0xff, 0x02, 0x01, 0xac,
	0x6f, 0x09, 0x01, 0x00, 0x00,
}
