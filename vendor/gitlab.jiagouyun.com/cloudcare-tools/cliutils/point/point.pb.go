// Unless explicitly stated otherwise all files in this repository are licensed
// under the MIT License.
// This product includes software developed at Guance Cloud (https://www.guance.com/).
// Copyright 2021-present Guance, Inc.

// Definition of point in protobuf
// Generate: see pb.sh

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: point.proto

package point

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Field_MetricType int32

const (
	Field_UNSPECIFIED Field_MetricType = 0
	Field_COUNT       Field_MetricType = 1
	Field_RATE        Field_MetricType = 2
	Field_GAUGE       Field_MetricType = 3
)

// Enum value maps for Field_MetricType.
var (
	Field_MetricType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "COUNT",
		2: "RATE",
		3: "GAUGE",
	}
	Field_MetricType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"COUNT":       1,
		"RATE":        2,
		"GAUGE":       3,
	}
)

func (x Field_MetricType) Enum() *Field_MetricType {
	p := new(Field_MetricType)
	*p = x
	return p
}

func (x Field_MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Field_MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_point_proto_enumTypes[0].Descriptor()
}

func (Field_MetricType) Type() protoreflect.EnumType {
	return &file_point_proto_enumTypes[0]
}

func (x Field_MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Field_MetricType.Descriptor instead.
func (Field_MetricType) EnumDescriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{2, 0}
}

// Debug used to attached some debug info for the point, these debug info
// will encoded into payload, storage can take optional handle on these debug
// info.
type Debug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Debug) Reset() {
	*x = Debug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Debug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Debug) ProtoMessage() {}

func (x *Debug) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Debug.ProtoReflect.Descriptor instead.
func (*Debug) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{0}
}

func (x *Debug) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// example of pb.Any
type AnyDemo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Demo string `protobuf:"bytes,1,opt,name=demo,proto3" json:"demo,omitempty"`
}

func (x *AnyDemo) Reset() {
	*x = AnyDemo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyDemo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyDemo) ProtoMessage() {}

func (x *AnyDemo) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyDemo.ProtoReflect.Descriptor instead.
func (*AnyDemo) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{1}
}

func (x *AnyDemo) GetDemo() string {
	if x != nil {
		return x.Demo
	}
	return ""
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// For uint64/int64, json value type is string,
	// for []byte, json value is base64 encoded string.
	// See https://developers.google.com/protocol-buffers/docs/proto3#json
	//
	// Types that are assignable to Val:
	//	*Field_I
	//	*Field_U
	//	*Field_F
	//	*Field_F32
	//	*Field_B
	//	*Field_S
	//	*Field_D
	//	*Field_A
	Val  isField_Val      `protobuf_oneof:"val"`
	Type Field_MetricType `protobuf:"varint,10,opt,name=type,proto3,enum=point.Field_MetricType" json:"type,omitempty"`
	// field unit name
	Unit string `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"` // metric unit, such as bytes(B), duration(ms/us) and so on.
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{2}
}

func (x *Field) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (m *Field) GetVal() isField_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *Field) GetI() int64 {
	if x, ok := x.GetVal().(*Field_I); ok {
		return x.I
	}
	return 0
}

func (x *Field) GetU() uint64 {
	if x, ok := x.GetVal().(*Field_U); ok {
		return x.U
	}
	return 0
}

func (x *Field) GetF() float64 {
	if x, ok := x.GetVal().(*Field_F); ok {
		return x.F
	}
	return 0
}

func (x *Field) GetF32() float32 {
	if x, ok := x.GetVal().(*Field_F32); ok {
		return x.F32
	}
	return 0
}

func (x *Field) GetB() bool {
	if x, ok := x.GetVal().(*Field_B); ok {
		return x.B
	}
	return false
}

func (x *Field) GetS() string {
	if x, ok := x.GetVal().(*Field_S); ok {
		return x.S
	}
	return ""
}

func (x *Field) GetD() []byte {
	if x, ok := x.GetVal().(*Field_D); ok {
		return x.D
	}
	return nil
}

func (x *Field) GetA() *anypb.Any {
	if x, ok := x.GetVal().(*Field_A); ok {
		return x.A
	}
	return nil
}

func (x *Field) GetType() Field_MetricType {
	if x != nil {
		return x.Type
	}
	return Field_UNSPECIFIED
}

func (x *Field) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type isField_Val interface {
	isField_Val()
}

type Field_I struct {
	I int64 `protobuf:"varint,2,opt,name=i,proto3,oneof"`
}

type Field_U struct {
	U uint64 `protobuf:"varint,3,opt,name=u,proto3,oneof"` // unsigned int
}

type Field_F struct {
	F float64 `protobuf:"fixed64,4,opt,name=f,proto3,oneof"` // float64
}

type Field_F32 struct {
	F32 float32 `protobuf:"fixed32,5,opt,name=f32,proto3,oneof"` // float32
}

type Field_B struct {
	B bool `protobuf:"varint,6,opt,name=b,proto3,oneof"`
}

type Field_S struct {
	S string `protobuf:"bytes,7,opt,name=s,proto3,oneof"` // string
}

type Field_D struct {
	D []byte `protobuf:"bytes,8,opt,name=d,proto3,oneof"` // binary data bytes
}

type Field_A struct {
	// XXX: not used
	A *anypb.Any `protobuf:"bytes,9,opt,name=a,proto3,oneof"` // any data
}

func (*Field_I) isField_Val() {}

func (*Field_U) isField_Val() {}

func (*Field_F) isField_Val() {}

func (*Field_F32) isField_Val() {}

func (*Field_B) isField_Val() {}

func (*Field_S) isField_Val() {}

func (*Field_D) isField_Val() {}

func (*Field_A) isField_Val() {}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{3}
}

func (x *Tag) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Tag) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

// Warn used to attach some warning message during building the point.
type Warn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,json=message,proto3" json:"msg,omitempty"`
}

func (x *Warn) Reset() {
	*x = Warn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warn) ProtoMessage() {}

func (x *Warn) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warn.ProtoReflect.Descriptor instead.
func (*Warn) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{4}
}

func (x *Warn) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Warn) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PBPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   []byte   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags   []*Tag   `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Fields []*Field `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Time   int64    `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	// Auxiliary fields for the point, they should not
	// write to the final storage on production.
	Warns  []*Warn  `protobuf:"bytes,5,rep,name=warns,proto3" json:"warns,omitempty"`
	Debugs []*Debug `protobuf:"bytes,6,rep,name=debugs,proto3" json:"debugs,omitempty"`
}

func (x *PBPoint) Reset() {
	*x = PBPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPoint) ProtoMessage() {}

func (x *PBPoint) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPoint.ProtoReflect.Descriptor instead.
func (*PBPoint) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{5}
}

func (x *PBPoint) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *PBPoint) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PBPoint) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PBPoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PBPoint) GetWarns() []*Warn {
	if x != nil {
		return x.Warns
	}
	return nil
}

func (x *PBPoint) GetDebugs() []*Debug {
	if x != nil {
		return x.Debugs
	}
	return nil
}

// Batch of PBPoint.
type PBPoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*PBPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *PBPoints) Reset() {
	*x = PBPoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_point_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPoints) ProtoMessage() {}

func (x *PBPoints) ProtoReflect() protoreflect.Message {
	mi := &file_point_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPoints.ProtoReflect.Descriptor instead.
func (*PBPoints) Descriptor() ([]byte, []int) {
	return file_point_proto_rawDescGZIP(), []int{6}
}

func (x *PBPoints) GetPoints() []*PBPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_point_proto protoreflect.FileDescriptor

var file_point_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1b, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1d, 0x0a, 0x07,
	0x41, 0x6e, 0x79, 0x44, 0x65, 0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x05,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x01, 0x69, 0x12, 0x0e, 0x0a, 0x01, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x01, 0x75, 0x12, 0x0e, 0x0a, 0x01, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x01, 0x66, 0x12, 0x12, 0x0a, 0x03, 0x66, 0x33, 0x32, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x03, 0x66, 0x33, 0x32, 0x12, 0x0e, 0x0a, 0x01, 0x62,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x01, 0x62, 0x12, 0x0e, 0x0a, 0x01, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x73, 0x12, 0x0e, 0x0a, 0x01, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x01, 0x64, 0x12, 0x24, 0x0a, 0x01, 0x61,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x01,
	0x61, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x22, 0x3d, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x52, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x41, 0x55, 0x47, 0x45, 0x10,
	0x03, 0x42, 0x05, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x30, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x07, 0x50, 0x42, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x05, 0x77, 0x61, 0x72,
	0x6e, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x52, 0x06, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x42, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x42, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x12, 0x42, 0x05,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x01, 0x5a, 0x07, 0x2f, 0x3b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_point_proto_rawDescOnce sync.Once
	file_point_proto_rawDescData = file_point_proto_rawDesc
)

func file_point_proto_rawDescGZIP() []byte {
	file_point_proto_rawDescOnce.Do(func() {
		file_point_proto_rawDescData = protoimpl.X.CompressGZIP(file_point_proto_rawDescData)
	})
	return file_point_proto_rawDescData
}

var file_point_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_point_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_point_proto_goTypes = []interface{}{
	(Field_MetricType)(0), // 0: point.Field.MetricType
	(*Debug)(nil),         // 1: point.Debug
	(*AnyDemo)(nil),       // 2: point.AnyDemo
	(*Field)(nil),         // 3: point.Field
	(*Tag)(nil),           // 4: point.Tag
	(*Warn)(nil),          // 5: point.Warn
	(*PBPoint)(nil),       // 6: point.PBPoint
	(*PBPoints)(nil),      // 7: point.PBPoints
	(*anypb.Any)(nil),     // 8: google.protobuf.Any
}
var file_point_proto_depIdxs = []int32{
	8, // 0: point.Field.a:type_name -> google.protobuf.Any
	0, // 1: point.Field.type:type_name -> point.Field.MetricType
	4, // 2: point.PBPoint.tags:type_name -> point.Tag
	3, // 3: point.PBPoint.fields:type_name -> point.Field
	5, // 4: point.PBPoint.warns:type_name -> point.Warn
	1, // 5: point.PBPoint.debugs:type_name -> point.Debug
	6, // 6: point.PBPoints.points:type_name -> point.PBPoint
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_point_proto_init() }
func file_point_proto_init() {
	if File_point_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_point_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Debug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_point_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyDemo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_point_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_point_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_point_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_point_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_point_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_point_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Field_I)(nil),
		(*Field_U)(nil),
		(*Field_F)(nil),
		(*Field_F32)(nil),
		(*Field_B)(nil),
		(*Field_S)(nil),
		(*Field_D)(nil),
		(*Field_A)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_point_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_point_proto_goTypes,
		DependencyIndexes: file_point_proto_depIdxs,
		EnumInfos:         file_point_proto_enumTypes,
		MessageInfos:      file_point_proto_msgTypes,
	}.Build()
	File_point_proto = out.File
	file_point_proto_rawDesc = nil
	file_point_proto_goTypes = nil
	file_point_proto_depIdxs = nil
}
