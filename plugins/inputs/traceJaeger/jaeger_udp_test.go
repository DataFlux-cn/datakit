package traceJaeger

import (
	"testing"
)

var UdpData = []byte {
	0x82, 0x81,  0x1,  0x9, 0x65, 0x6D, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1C, 0x1C, 0x18,
	0x3, 0x46, 0x46, 0x46, 0x19, 0x4C, 0x18,  0xE, 0x6A, 0x61, 0x65, 0x67, 0x65, 0x72, 0x2E, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x15,  0x0, 0x18,  0xD, 0x47, 0x6F, 0x2D, 0x32, 0x2E, 0x32,
	0x35, 0x2E, 0x31, 0x2D, 0x64, 0x65, 0x76,  0x0, 0x18,  0x8, 0x68, 0x6F, 0x73, 0x74, 0x6E, 0x61,
	0x6D, 0x65, 0x15,  0x0, 0x18,  0xF, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x2D, 0x37, 0x42,
	0x4B, 0x34, 0x39, 0x37, 0x53,  0x0, 0x18,  0x2, 0x69, 0x70, 0x15,  0x0, 0x18,  0xF, 0x31, 0x36,
	0x39, 0x2E, 0x32, 0x35, 0x34, 0x2E, 0x32, 0x35, 0x31, 0x2E, 0x32, 0x34, 0x37,  0x0, 0x18,  0xB,
	0x63, 0x6C, 0x69, 0x65, 0x6E, 0x74, 0x2D, 0x75, 0x75, 0x69, 0x64, 0x15,  0x0, 0x18, 0x10, 0x31,
	0x37, 0x32, 0x38, 0x36, 0x31, 0x39, 0x62, 0x30, 0x30, 0x64, 0x39, 0x63, 0x64, 0x36, 0x33,  0x0,
	0x0, 0x19, 0x1C, 0x16, 0xFE, 0xBC, 0x94, 0xC4, 0x92, 0xA9, 0x93, 0xCE, 0xA4,  0x1, 0x16,  0x0,
	0x16, 0xD8, 0xDB, 0xA6, 0xD9, 0x8C, 0xD5, 0x93, 0xA8, 0xDF,  0x1, 0x16, 0xAE, 0x8E, 0x97, 0xE1,
	0xD2, 0xBF, 0xD3, 0xAA, 0x87,  0x1, 0x18,  0x4, 0x61, 0x75, 0x74, 0x68, 0x19, 0x1C, 0x15,  0x0,
	0x16, 0xFE, 0xBC, 0x94, 0xC4, 0x92, 0xA9, 0x93, 0xCE, 0xA4,  0x1, 0x16,  0x0, 0x16, 0xAE, 0x8E,
	0x97, 0xE1, 0xD2, 0xBF, 0xD3, 0xAA, 0x87,  0x1,  0x0, 0x15,  0x2, 0x16, 0x88, 0xF0, 0xBC, 0xBE,
	0xAD, 0xD2, 0xE1,  0x5, 0x16, 0xF6, 0xA5,  0xC, 0x19,  0xC, 0x19, 0x1C, 0x16, 0x88, 0xF0, 0xBC,
	0xBE, 0xAD, 0xD2, 0xE1,  0x5, 0x19, 0x3C, 0x18,  0x5, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x15,  0x0,
	0x18,  0xA, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x61, 0x75, 0x74, 0x68,  0x0, 0x18,  0x4, 0x74,
	0x79, 0x70, 0x65, 0x15,  0x0, 0x18,  0xD, 0x6E, 0x61, 0x6D, 0x65, 0x2F, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6F, 0x72, 0x64,  0x0, 0x18,  0x2, 0x49, 0x44, 0x15,  0x6, 0x46, 0xB8, 0x17,  0x0,  0x0,
	0x0, 0x16,  0xC, 0x1C, 0x16,  0x0, 0x16,  0x0, 0x16,  0x0,  0x0,  0x0,  0x0,
}

func assertEqual(t *testing.T, a, b interface{}) {
	t.Helper()
	if a != b {
		t.Errorf("Not Equal. %d %d", a, b)
	}
}

func TestJeagerUdpParse(t *testing.T) {
	groups, err := parseJaegerUdp(UdpData)
	assertEqual(t, err, nil)

	g1 := groups[0]
	assertEqual(t, g1.ServiceName, "FFF")
	assertEqual(t, g1.OperationName, "auth")
	assertEqual(t, g1.TraceID, "0524e26a494428f3f")
	assertEqual(t, g1.SpanID, "8045723977732380396")
	assertEqual(t, g1.Start, int64(1622094993923076000))
	assertEqual(t, g1.Duration, int64(100731000))
}
